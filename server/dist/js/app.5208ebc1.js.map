{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/assets/music/explosion.wav","webpack:///./src/assets/space-ship.gif","webpack:///./src/assets/background.png","webpack:///./src/assets/music/lost-times.mp3","webpack:///./src/assets/Spaceships-nova/nova-c-yellow-1.png","webpack:///./src/App.vue?0a1e","webpack:///./src/engine/render.js","webpack:///./src/engine/objects/vector2.js","webpack:///./src/engine/objects/object2d.js","webpack:///./src/engine/objects/camera2d.js","webpack:///./src/engine/input.js","webpack:///./src/engine/objects/text.js","webpack:///./src/engine/utils/random.js","webpack:///./src/engine/objects/stopwatch.js","webpack:///./src/engine/objects/texture2d.js","webpack:///./src/engine/objects/player2d.js","webpack:///./src/engine/objects/collisionBodySquare.js","webpack:///./src/game/globals.js","webpack:///./src/game/menu.js","webpack:///./src/engine/objects/timer.js","webpack:///./src/engine/objects/particle.js","webpack:///./src/game/player.js","webpack:///./src/game/shotTemp.js","webpack:///./src/game/badGuyTemp.js","webpack:///./src/game/game.js","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/assets/music/laser-shot.wav","webpack:///./src/assets/music/storm.mp3","webpack:///./src/assets/Spaceships-nova/nova-b-green-4.png","webpack:///./src/assets/Spaceships-nova/nova-a-blue-1.png","webpack:///./src/assets/Spaceships-nova/nova-a-purple-4.png","webpack:///./src/assets/explosion.png","webpack:///./src/assets/music/level-up.mp3","webpack:///./src/assets/Spaceships-nova/nova-b-orange-4.png","webpack:///./src/assets/Spaceships-nova/nova-a-red-1.png","webpack:///./src/assets/Spaceships-nova/nova-c-purple-4.png","webpack:///./src/assets/Spaceships-nova/nova-c-red-3.png"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","attrs","Render","context","canvas","cameras","background","hud","aciteCamera","backgroundImage","Image","addEventListener","console","log","src","require","style","clearRect","width","height","drawImage","save","translate","pos","x","y","rotate","rotation","scale","layer","render","restore","progress","fillStyle","fillRect","Vector2","vector","Object2d","config","physicsVector","physicsInertia","hide","input","undefined","events","updateFns","update","map","e","fun","elapsedTime","radians","Camera2d","followDist","follow","getPos","addToUpdate","Input","keys","keyPress","mouseLocation","mouseClick","timeStamp","clientX","offsetLeft","offsetWidth","clientY","offsetTop","offsetHeight","Text","font","text","textAlign","fillText","randInt","max","Math","floor","random","randIntRange","min","ceil","randPosNeg","randRange","rand","Stopwatch","time","seconds","paused","toFixed","Texture2d","speed","rotationRate","PI","strokeStyle","orientation","orintation","ss","randomState","state","currentState","image","collisionShow","frame","Player2d","box","CollisionBodySquare","collisionType","collisionObjects","collisionChecks","hasCollided","hasBeenVisited","center","collisionCenter","dim","collisionDim","xdim","ydim","collision","element","el","obX","obY","obXdim","obYdim","storeGlobals","localStorage","setItem","JSON","stringify","globals","getGlobals","getItem","parse","score","up","down","left","right","fire","highScores","sound","start","document","createElement","setAttribute","display","body","appendChild","play","currentTime","stop","pause","sounds","music1","music2","laser","explosion","music3","fireImage","novaAblue1","novaAred1","novaCyellow1","novaApurple4","novaBgreen4","novaBorange4","novaCred3","novaCpurple4","Images","that","renders","menuState","changeInput","credits","highScore","creditsContent","instructions","back","pitchLeft","pitchRight","thrust","highScoreContent","waitingText","updateHighScores","String","getRenders","forEach","isOverPlay","checkOverlay","isOverCredits","isOverChange","isOverHigh","isOverBack","isOverPitchLeft","isOverPitchRight","isOverThrust","updateKeyText","waitForInput","inputKey","reset","Timer","eventFired","event","abs","Particle","particles","newParts","xVel","yVel","duration","updateParticles","inertia","theta","cos","sin","x1","x2","y2","Random","rot","xOff","yOff","part","player","S","checkCollision","dead","playerDie","BadGuyTemp","T","R","path","pathIndex","at","green1x","p0","p1","green1y","green2x","p2","green2y","green3x","p3","green3y","blue1x","blue1y","blue2x","blue2y","finalx","finaly","atan2","originalPos","holdingOffset","shoot","home","lives","checkGone","game","getElementById","getContext","previousTime","performance","now","imageSmoothingEnabled","cam1","gameState","stateChange","levelState","level","lockPlayer","playerShots","shotInterval","lastShot","shotsFired","numHits","badGuyShots","badGuys","livesSprites","holdingOffsetDirection","setLiveSprites","playerShoot","Shot","Player","badGuyShoot","countdown","startLevelTimer","playerTimer","stageText","menu","scoreText","endGameText1","endGameText2","endGameText3","allHome","addL1P1","addL1P2","addL1P3","addL1P4","addL1P5","checkLevelOver","numAdded","goalToAdd","addTime","addInt","col","addL1P1Ships","reportedScore","addL1P2Ships","addL1P3Ships","addL1P4Ships","addL1P5Ships","paths","divebomb","pi","startLevel1","startLevel2","startLevel3","updateHoldingOffset","reduce","numerator","denominator","gcd","a","b","Menu","edges","ratio","added","wait","newShots","deadAndDone","newBadGuys","newBadGuyShots","clear","gameLoop","requestAnimationFrame","mounted","component","Vue","productionTip","h","App","$mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,IAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,6ECvJT,yBAAwb,EAAG,G,uBCA3bW,EAAOD,QAAU,IAA0B,gC,uBCA3CC,EAAOD,QAAU,IAA0B,+B,uBCA3CC,EAAOD,QAAU,IAA0B,+B,uBCA3CC,EAAOD,QAAU,IAA0B,iC,uBCA3CC,EAAOD,QAAU,IAA0B,oC,mGCAvC,EAAS,WAAa,IAAI+B,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAII,MAAMC,GAAO,OAAOL,EAAIM,GAAG,IACnGC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,QAAQ,CAACH,EAAG,SAAS,CAACG,MAAM,CAAC,GAAK,YAAY,MAAQ,OAAO,OAAS,c,gKCCjLC,E,WAEnB,WAAaC,EAASC,EAAQC,EAASC,EAAYC,GAAK,uBACtDb,KAAKS,QAAUA,EACfT,KAAKU,OAASA,EACdV,KAAKW,QAAUA,EACfX,KAAKc,YAAc,EACnBd,KAAKY,WAAaA,GAA0B,mBAC5CZ,KAAKa,IAAM,GACPA,IACFb,KAAKa,IAAMA,GAGbb,KAAKe,gBAAkB,IAAIC,MAC3BhB,KAAKe,gBAAgBE,iBAAiB,QAAQ,WAC5CC,QAAQC,IAAI,8BAEdnB,KAAKe,gBAAgBK,IAAMC,EAAQ,Q,qDAI9BzC,GAGLoB,KAAKU,OAAOY,MAAMV,WAAaZ,KAAKY,WAEpCZ,KAAKS,QAAQc,UAAU,EAAG,EAAGvB,KAAKU,OAAOc,MAAOxB,KAAKU,OAAOe,QAE5DzB,KAAKS,QAAQiB,UACX1B,KAAKe,gBACL,IACA,EACA,KACA,KACA,EACA,EACA,KACA,MAGFf,KAAKS,QAAQkB,OACb3B,KAAKS,QAAQmB,UAAU5B,KAAKW,QAAQX,KAAKc,aAAae,IAAIC,EACxD9B,KAAKW,QAAQX,KAAKc,aAAae,IAAIE,GACrC/B,KAAKS,QAAQuB,OAAOhC,KAAKW,QAAQX,KAAKc,aAAamB,UACnDjC,KAAKS,QAAQyB,MACXlC,KAAKW,QAAQX,KAAKc,aAAaoB,MAAMJ,EACrC9B,KAAKW,QAAQX,KAAKc,aAAaoB,MAAMH,GACvC,IAAK,IAAIvF,EAAI,EAAGA,EAAIoC,EAAElC,OAAQF,IAE5B,IADA,IAAM2F,EAAQvD,EAAEpC,GACP0B,EAAI,EAAGA,EAAIiE,EAAMzF,OAAQwB,IAAK,CACrC,IAAMsB,EAAS2C,EAAMjE,GACjBsB,GACFA,EAAO4C,OAAOpC,KAAKS,SAIzBT,KAAKS,QAAQ4B,UACb,IAAK,IAAI7F,EAAI,EAAGA,EAAIwD,KAAKa,IAAInE,OAAQF,IACnCwD,KAAKa,IAAIrE,GAAG4F,OAAOpC,KAAKS,W,8BAInB6B,GACPtC,KAAKS,QAAQc,UAAU,EAAG,EAAGvB,KAAKU,OAAOc,MAAOxB,KAAKU,OAAOe,QAC5DzB,KAAKS,QAAQ8B,UAAY,uBACzB,IAAIf,EAAQxB,KAAKU,OAAOc,MAAQc,EAC5Bb,EAASzB,KAAKU,OAAOe,OAASa,EAC9BR,EAAK9B,KAAKU,OAAOc,MAAQ,EAAMA,EAAQ,EACvCO,EAAK/B,KAAKU,OAAOe,OAAS,EAAMA,EAAS,EAC7CzB,KAAKS,QAAQ+B,SAASV,EAAGC,EAAGP,EAAOC,O,yCCvElBgB,E,WACnB,WAAaX,EAAGC,GAAG,uBACjB/B,KAAK8B,EAAIA,EACT9B,KAAK+B,EAAIA,E,mDAGPW,GACF1C,KAAK8B,GAAKY,EAAOZ,EACjB9B,KAAK+B,GAAKW,EAAOX,M,KCNAY,G,+BACnB,WAAaC,GAAQ,kCACnB5C,KAAK1B,KAAOsE,EAAOtE,KAAOsE,EAAOtE,KAAO,cACxC0B,KAAKwB,MAAQoB,EAAOpB,MAAQoB,EAAOpB,MAAQ,EAC3CxB,KAAKyB,OAASmB,EAAOnB,OAASmB,EAAOnB,OAAS,EAC9CzB,KAAK6B,IAAMe,EAAOf,IAChB,IAAIY,EAAQG,EAAOf,IAAIC,EAAGc,EAAOf,IAAIE,GACrC,IAAIU,EAAQ,EAAG,GACjBzC,KAAKkC,MAAQU,EAAOV,MAClB,IAAIO,EAAQG,EAAOV,MAAMJ,EAAGc,EAAOV,MAAMH,GACzC,IAAIU,EAAQ,EAAG,GACjBzC,KAAKiC,SAAWW,EAAOX,SAAWW,EAAOX,SAAW,EACpDjC,KAAK6C,cAAgBD,EAAOC,cAAgBD,EAAOC,cAAgB,IAAIJ,EAAQ,EAAG,GAClFzC,KAAK8C,eAAiBF,EAAOE,eAAiBF,EAAOE,eAAiB,IAAIL,EAAQ,EAAG,GACrFzC,KAAK+C,OAAOH,EAAOG,MAAOH,EAAOG,KAEjC/C,KAAKgD,MAAQJ,EAAOI,MAAQJ,EAAOI,WAAQC,EAE3CjD,KAAKkD,OAASN,EAAOM,OAASN,EAAOM,YAASD,EAE9C,IAAIE,EAAY,GACZP,EAAOQ,QACTR,EAAOQ,OAAOC,KAAI,SAAAC,GAChBH,EAAUnG,KAAKsG,EAAEhE,KAAK,OAG1BU,KAAKmD,UAAYA,E,wDAIjB,OAAOnD,KAAK6B,M,kCAGF0B,GACVvD,KAAKmD,UAAUnG,KAAKuG,EAAIjE,KAAKU,S,6BAGxBwD,EAAaR,GAClBhD,KAAKmD,UAAUE,KAAI,SAAAC,GACjBA,EAAEE,EAAaR,Q,6BAIZS,GACLzD,KAAKiC,UAAYwB,I,6BAGZhD,Q,MC9CYiD,E,YACnB,WAAad,GAAQ,oCACnB,kDAAMA,IAEN,EAAKe,WAAaf,EAAOe,WACvB,IAAIlB,EAAQG,EAAOe,WAAW7B,EAAGc,EAAOe,WAAW5B,GACnD,IAAIU,EAAQ,EAAG,GALE,E,gFAQPjD,GACZ,IAAIoE,EAAS,SAASJ,GAOpBxD,KAAK6B,IAAIC,GAAKtC,EAAOqE,SAAS/B,EAAI9B,KAAKkC,MAAMJ,EAAI,IACjD9B,KAAK6B,IAAIE,GAAKvC,EAAOqE,SAAS9B,EAAI/B,KAAKkC,MAAMH,EAAI,KAGnD/B,KAAK8D,YAAYF,O,GArBiBjB,GCHjBoB,E,WACnB,WAAYrD,GAAQ,kCAClBV,KAAKgE,KAAO,GACZhE,KAAKiE,SAAW,GAChBjE,KAAKkE,cAAgB,CAACpC,EAAG,EAAGC,EAAG,GAC/B/B,KAAKmE,WAELvE,OAAOqB,iBAAiB,WAAW,SAACqC,GAClC,EAAKU,KAAKV,EAAEjE,KAAOiE,EAAEc,UACrB,EAAKH,SAASX,EAAEjE,KAAOiE,EAAEc,aAE3BxE,OAAOqB,iBAAiB,SAAS,SAACqC,UACzB,EAAKU,KAAKV,EAAEjE,QAGrBqB,EAAOO,iBAAiB,aAAa,SAACqC,GACpC,EAAKa,YAAa,KAGpBzD,EAAOO,iBAAiB,aAAa,SAACqC,GACpC,EAAKY,cAAcpC,GAAKwB,EAAEe,QAAU3D,EAAO4D,aAAe5D,EAAOc,MAAQd,EAAO6D,aAChF,EAAKL,cAAcnC,GAAKuB,EAAEkB,QAAU9D,EAAO+D,YAAc/D,EAAOe,OAASf,EAAOgE,iB,uDAMlF1E,KAAKiE,SAAW,GAChBjE,KAAKmE,YAAa,M,KC1BDQ,E,YAEnB,WAAY/B,GAAQ,oCAClB,kDAAMA,IACN,EAAKgC,KAAOhC,EAAOgC,KAAOhC,EAAOgC,KAAO,aACxC,EAAKC,KAAOjC,EAAOiC,KAAOjC,EAAOiC,KAAO,OACxC,EAAKtC,UAAYK,EAAOL,UAAYK,EAAOL,UAAY,OACvD,EAAKuC,UAAYlC,EAAOkC,UAAYlC,EAAOkC,UAAY,OACvD,EAAK/B,OAAOH,EAAOG,MAAOH,EAAOG,KANf,E,0EASZtC,GACDT,KAAK+C,OACRtC,EAAQkB,OACRlB,EAAQmB,UAAU5B,KAAK6B,IAAIC,EAAG9B,KAAK6B,IAAIE,GACvCtB,EAAQuB,OAAOhC,KAAKiC,UACpBxB,EAAQmB,WAAW5B,KAAK6B,IAAIC,GAAI9B,KAAK6B,IAAIE,GACzCtB,EAAQ8B,UAAYvC,KAAKuC,UACzB9B,EAAQmE,KAAO5E,KAAK4E,KACpBnE,EAAQsE,SAAS/E,KAAK6E,KAAM7E,KAAK6B,IAAIC,EAAG9B,KAAK6B,IAAIE,GACjDtB,EAAQ4B,e,GApBoBM,GCFrBqC,EAAU,SAASC,GAC9B,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,KAGlCI,EAAe,SAAUC,EAAKL,GAGzC,OAFAK,EAAMJ,KAAKK,KAAKD,GAChBL,EAAMC,KAAKC,MAAMF,GACVC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMK,EAAM,IAAMA,GAG1CE,EAAa,WACxB,OAAIN,KAAKE,SAAW,GACXF,KAAKE,UAEY,EAAjBF,KAAKE,UAIHK,EAAY,SAAUH,EAAKL,GACtC,IAAIS,EAAOR,KAAKE,UAAYH,EAAMK,GAClC,OAAOA,EAAMI,GAGA,GACbV,UACAK,eACAG,aACAC,aC3BmBE,G,qBACnB,aAAc,uBACZ3F,KAAK4F,KAAO,EACZ5F,KAAK6F,QAAU,EACf7F,KAAK8F,QAAS,E,sDAGRtC,GACFxD,KAAK8F,SACP9F,KAAK4F,MAAQpC,EAEbxD,KAAK6F,SAAW7F,KAAK4F,KAAO,KAAMG,QAAQ,Q,MCR3BC,E,YAEnB,WAAYpD,GAAQ,oCAClB,kDAAMA,IACN,EAAKqD,MAAQrD,EAAOqD,MAAQrD,EAAOqD,MAAQ,EAC3C,EAAKC,aAAetD,EAAOsD,aAAetD,EAAOsD,aAAe,EAAIhB,KAAKiB,GAAK,IAC9E,EAAK5D,UAAYK,EAAOL,UAAYK,EAAOL,UAAY,qBACvD,EAAK6D,YAAcxD,EAAOwD,YAAcxD,EAAOwD,YAAc,eAC7D,EAAKC,YAAczD,EAAO0D,WAAa1D,EAAOyD,YAAc,EAC5D,EAAKE,GAAK3D,EAAO2D,GAAK3D,EAAO2D,GAAK,GAC9B3D,EAAO4D,YACT,EAAKC,MAAQ7D,EAAO6D,MACpB,EAAKF,GAAG3D,EAAO6D,OAAOzB,EAAQ,EAAKuB,GAAG3D,EAAO6D,OAAO/J,SACpD,EAAK6J,GAAG5J,OAAOqH,KAAK,EAAKuC,IAAI,IAE7B,EAAKE,MAAQ7D,EAAO6D,MAClB,EAAKF,GAAG3D,EAAO6D,OAAO,GACtB,EAAKF,GAAG5J,OAAOqH,KAAK,EAAKuC,IAAI,IAEjC,EAAKG,aAAe9D,EAAO6D,MAAQ7D,EAAO6D,MAAQ9J,OAAOqH,KAAK,EAAKuC,IAAI,GACvE,EAAKI,MAAQ/D,EAAO+D,MAAQ/D,EAAO+D,WAAQ1D,EAC3C,EAAK2D,gBAAgBhE,EAAOgE,eAC1BhE,EAAOgE,cApBS,E,4EAuBXH,EAAOI,GACd7G,KAAKyG,MAAQzG,KAAKuG,GAAGE,GAAO,GAC5BzG,KAAK0G,aAAeD,I,6BAGdhG,GACNA,EAAQkB,OACRlB,EAAQmB,UAAU5B,KAAK6B,IAAIC,EAAG9B,KAAK6B,IAAIE,GACvCtB,EAAQuB,OAAOhC,KAAKiC,UACpBxB,EAAQmB,WAAW5B,KAAK6B,IAAIC,GAAI9B,KAAK6B,IAAIE,GACpC/B,KAAK+C,MACRtC,EAAQiB,UACN1B,KAAK2G,MACL3G,KAAKyG,MAAM3E,EACX9B,KAAKyG,MAAM1E,EACX/B,KAAKyG,MAAMjF,MACXxB,KAAKyG,MAAMhF,OACXzB,KAAK6B,IAAIC,EAAK9B,KAAKwB,MAAQ,EAC3BxB,KAAK6B,IAAIE,EAAK/B,KAAKyB,OAAS,EAC5BzB,KAAKwB,MACLxB,KAAKyB,QA+BThB,EAAQ4B,c,GA5E2BM,GCDlBmE,E,YACnB,WAAalE,GAAQ,oCACnB,kDAAMA,IAGN,EAAKmE,IAAMnE,EAAOmE,IAAMnE,EAAOmE,SAAM9D,EAJlB,E,8BADe+C,GCCjBgB,E,YACnB,WAAapE,GAAQ,oCACnB,kDAAMA,IAGN,EAAKmE,IAAMnE,EAAOmE,IAAMnE,EAAOmE,SAAM9D,EACrC,EAAKgE,cAAgB,SAGrB,EAAKC,iBAAL,eAA4BtE,EAAOsE,kBAUnC,EAAKC,gBAAkB,GACvB,EAAKC,aAAc,EAEfxE,EAAOuE,kBACT,EAAKA,gBAAL,eAA2BvE,EAAOuE,kBAEpC,EAAKE,gBAAiB,EAxBH,E,oFA4BnBrH,KAAKoH,aAAc,EAanB,IAZA,IAAMvF,EAAM7B,KAAK6B,IACXyF,EAAStH,KAAKkH,iBAAiB,GAAGK,gBAClCC,EAAMxH,KAAKkH,iBAAiB,GAAGO,aAEjC3F,EAAID,EAAIC,EAAIwF,EAAOxF,EACnBC,EAAIF,EAAIE,EAAIuF,EAAOvF,EAEnB2F,EAAOF,EAAI1F,EAAI,EACf6F,EAAOH,EAAIzF,EAAI,EAEf6F,GAAY,EAEPpL,EAAI,EAAGA,EAAIwD,KAAKmH,gBAAgBzK,OAAQF,IAE/C,IADA,IAAMqL,EAAU7H,KAAKmH,gBAAgB3K,GAC5BkB,EAAI,EAAGA,EAAImK,EAAQX,iBAAiBxK,OAAQgB,IAAK,CACxD,IAAMoK,EAAKD,EAAQX,iBAAiBxJ,GAEhCqK,EAAMD,EAAGP,gBAAgBzF,EAAI+F,EAAQhG,IAAIC,EACzCkG,EAAMF,EAAGP,gBAAgBxF,EAAI8F,EAAQhG,IAAIE,EAEzCkG,EAASH,EAAGL,aAAa3F,EAAI,EAC7BoG,EAASJ,EAAGL,aAAa1F,EAAI,EAE7BD,EAAI4F,EAAOK,EAAME,GAChBlG,EAAI4F,EAAOK,EAAME,GACjBpG,EAAI4F,EAAOK,EAAME,GACjBlG,EAAI4F,EAAOK,EAAME,IAClBN,GAAY,GAMpB,OAAOA,M,GA/DsCd,G,UCH1C,IAAMqB,EAAe,WAC1BC,aAAaC,QAAQ,UACnBC,KAAKC,UAAUC,KAINC,EAAY,WACnBL,aAAaM,QAAQ,WACvBF,EAAUF,KAAKK,MAAMP,aAAaM,QAAQ,YAE1CN,aAAaC,QAAQ,UACnBC,KAAKC,UAAUC,KAKVA,EAAU,CACnBI,MAAO,EACPC,GAAI,UACJC,KAAM,YACNC,KAAM,YACNC,MAAO,aACPC,KAAM,IACNC,WAAY,IAGd,SAASC,EAAM/H,EAAKgI,GAClBpJ,KAAKmJ,MAAQE,SAASC,cAAc,SACpCtJ,KAAKmJ,MAAM/H,IAAMA,EACjBpB,KAAKmJ,MAAMI,aAAa,UAAW,QACnCvJ,KAAKmJ,MAAMI,aAAa,WAAY,QACpCvJ,KAAKmJ,MAAM7H,MAAMkI,QAAU,OAC3BH,SAASI,KAAKC,YAAY1J,KAAKmJ,OAC/BnJ,KAAK2J,KAAO,WACV3J,KAAKmJ,MAAMS,YAAcR,EACzBpJ,KAAKmJ,MAAMQ,QAEb3J,KAAK6J,KAAO,WACV7J,KAAKmJ,MAAMW,SAIR,IAAMC,EAAS,CACpBC,OAAQ,IAAIb,EAAM9H,EAAQ,QAA8B,GACxD4I,OAAQ,IAAId,EAAM9H,EAAQ,QAAiC,GAC3D6I,MAAO,IAAIf,EAAM9H,EAAQ,QAAmC,IAC5D8I,UAAW,IAAIhB,EAAM9H,EAAQ,QAAkC,GAC/D+I,OAAQ,IAAIjB,EAAM9H,EAAQ,QAAmC,IAGzDgJ,EAAY,IAAIrJ,MACtBqJ,EAAUpJ,iBAAiB,QAAQ,WACjCC,QAAQC,IAAI,wBAEdkJ,EAAUjJ,IAAMC,EAAQ,QAExB,IAAMiJ,EAAa,IAAItJ,MACvBsJ,EAAWlJ,IAAMC,EAAQ,QAEzB,IAAMkJ,EAAY,IAAIvJ,MACtBuJ,EAAUnJ,IAAMC,EAAQ,QAExB,IAAMmJ,EAAe,IAAIxJ,MACzBwJ,EAAapJ,IAAMC,EAAQ,QAE3B,IAAMoJ,EAAe,IAAIzJ,MACzByJ,EAAarJ,IAAMC,EAAQ,QAE3B,IAAMqJ,EAAc,IAAI1J,MACxB0J,EAAYtJ,IAAMC,EAAQ,QAE1B,IAAMsJ,EAAe,IAAI3J,MACzB2J,EAAavJ,IAAMC,EAAQ,QAE3B,IAAMuJ,EAAY,IAAI5J,MACtB4J,EAAUxJ,IAAMC,EAAQ,QAExB,IAAMwJ,EAAe,IAAI7J,MACzB6J,EAAazJ,IAAMC,EAAQ,QAEpB,IAAIyJ,EAAS,CAClBT,YACAC,aACAC,YACAC,eACAC,eACAC,cACAC,eACAC,YACAC,gBCrFa,aACb,IAAIE,EAAO,CACTC,QAAS,GACTrB,MAAM,GAIJsB,EAAY,OAEZ3M,EAAO,IAAIqG,EAAK,CAClBE,KAAM,SACND,KAAM,iBACNrC,UAAW,QACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,OAGf4H,EAAO,IAAIhF,EAAK,CAClBE,KAAM,OACND,KAAM,iBACNrC,UAAW,QACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,OAGfmJ,EAAc,IAAIvG,EAAK,CACzBE,KAAM,eACND,KAAM,iBACNrC,UAAW,OACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,OAGfoJ,EAAU,IAAIxG,EAAK,CACrBE,KAAM,UACND,KAAM,iBACNrC,UAAW,OACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,OAGfqJ,EAAY,IAAIzG,EAAK,CACvBE,KAAM,cACND,KAAM,iBACNrC,UAAW,OACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,OAGfsJ,EAAiB,IAAI1G,EAAK,CAC5BE,KAAM,uBACND,KAAM,gBACNrC,UAAW,QACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,OAGfuJ,EAAe,IAAI3G,EAAK,CAC1BE,KAAM,sCACND,KAAM,gBACNrC,UAAW,QACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,OAGfwJ,EAAO,IAAI5G,EAAK,CAClBE,KAAM,OACND,KAAM,iBACNrC,UAAW,OACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,OAGfyJ,EAAY,IAAI7G,EAAK,CACvBE,KAAM,cAAgB2D,EAAQO,KAC9BnE,KAAM,gBACNrC,UAAW,OACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,OAGf0J,EAAa,IAAI9G,EAAK,CACxBE,KAAM,eAAiB2D,EAAQQ,MAC/BpE,KAAM,gBACNrC,UAAW,OACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,OAGf2J,EAAS,IAAI/G,EAAK,CACpBE,KAAM,UAA6B,MAAjB2D,EAAQS,KAAe,SAAWT,EAAQS,MAC5DrE,KAAM,gBACNrC,UAAW,OACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,OAGf4J,EAAmB,IAAIhH,EAAK,CAC9BE,KAAM,cACND,KAAM,gBACNrC,UAAW,QACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,OAGf6J,EAAc,IAAIjH,EAAK,CACzBE,KAAM,oBACND,KAAM,gBACNrC,UAAW,QACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,KACjBgB,MAAM,IAGJmG,EAAa,GAEjB,SAAS2C,IACP3C,EAAa,GACb,IAAK,IAAI1M,EAAI,EAAGA,EAAIgM,EAAQU,WAAWxM,OAAQF,IAAK,CAClD,GAAIA,EAAI,EAAG,OACX0M,EAAWlM,KACT,IAAI2H,EAAK,CACPE,KAAMiH,OAAOtP,EAAI,GAAK,KAAOgM,EAAQU,WAAW1M,GAChDoI,KAAM,gBACNrC,UAAW,OACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,IAAW,GAAJvF,OAOhC,SAASuP,IAGP,OAFAhB,EAAKC,QAAQtO,OAAS,EACtBqO,EAAKC,QAAQhO,KAAKsB,GACV2M,GACN,IAAK,OACHF,EAAKC,QAAQhO,KAAK2M,GAClBoB,EAAKC,QAAQhO,KAAKkO,GAClBH,EAAKC,QAAQhO,KAAKmO,GAClBJ,EAAKC,QAAQhO,KAAKoO,GAClB,MACF,IAAK,UACHL,EAAKC,QAAQhO,KAAKqO,GAClBN,EAAKC,QAAQhO,KAAKuO,GAClB,MACF,IAAK,SACHR,EAAKC,QAAQhO,KAAKsO,GAClBP,EAAKC,QAAQhO,KAAKwO,GAClBT,EAAKC,QAAQhO,KAAKyO,GAClBV,EAAKC,QAAQhO,KAAK0O,GAClBX,EAAKC,QAAQhO,KAAK4O,GAClBb,EAAKC,QAAQhO,KAAKuO,GAClB,MACF,IAAK,OACHR,EAAKC,QAAQhO,KAAK2O,GAClBZ,EAAKC,QAAQhO,KAAKuO,GAClBrC,EAAW8C,SAAQ,SAAAlE,GACjBiD,EAAKC,QAAQhO,KAAK8K,MAEtB,QACE,MAEJ,OAAOiD,EAAKC,QAqBd,SAASiB,EAAW/H,GAClB,OAAOgI,EAAahI,EAAeyF,EAAK9H,IAAIE,GAG9C,SAASoK,EAAcjI,GACrB,OAAOgI,EAAahI,EAAeiH,EAAQtJ,IAAIE,GAGjD,SAASqK,EAAalI,GACpB,OAAOgI,EAAahI,EAAegH,EAAYrJ,IAAIE,GAGrD,SAASsK,EAAWnI,GAClB,OAAOgI,EAAahI,EAAekH,EAAUvJ,IAAIE,GAGnD,SAASuK,EAAWpI,GAClB,OAAOgI,EAAahI,EAAeqH,EAAK1J,IAAIE,GAG9C,SAASwK,EAAgBrI,GACvB,OAAOgI,EAAahI,EAAesH,EAAU3J,IAAIE,GAEnD,SAASyK,EAAiBtI,GACxB,OAAOgI,EAAahI,EAAeuH,EAAW5J,IAAIE,GAEpD,SAAS0K,EAAavI,GACpB,OAAOgI,EAAahI,EAAewH,EAAO7J,IAAIE,GAGhD,SAAS2K,IACPlB,EAAU3G,KAAO,eAAiB2D,EAAQO,KAC1C0C,EAAW5G,KAAO,gBAAkB2D,EAAQQ,MAC5C0C,EAAO7G,KAAO,UAA6B,MAAjB2D,EAAQS,KAAe,SAAWT,EAAQS,MAvFtE4C,IA0FA,IAAIc,GAAe,EACfC,EAAW,GAEf,SAASV,EAAahI,EAAenC,GACnC,OAAImC,EAAcnC,GAAKA,EAAI,KAAOmC,EAAcnC,GAAKA,EAsGvD,OA/FAgJ,EAAK3H,OAAS,SAAUJ,GACtB+I,IAEIY,GAEChQ,OAAOqH,KAAKhB,EAAMiB,UAAUvH,OAAS,IACtCwE,QAAQC,IAAIxE,OAAOqH,KAAKhB,EAAMiB,UAAU,IACxCuE,EAAQoE,GAAYjQ,OAAOqH,KAAKhB,EAAMiB,UAAU,GAChDkE,IACAwE,GAAe,EACff,EAAY7I,MAAO,EACnB2J,KAIAT,EAAWjJ,EAAMkB,gBAAgC,SAAd+G,GACrCtB,EAAKpH,UAAY,QACjB2I,EAAY3I,UAAY,OACxB4I,EAAQ5I,UAAY,OACpB6I,EAAU7I,UAAY,QACb6J,EAAapJ,EAAMkB,gBAAgC,SAAd+G,GAC9CtB,EAAKpH,UAAY,OACjB2I,EAAY3I,UAAY,QACxB4I,EAAQ5I,UAAY,OACpB6I,EAAU7I,UAAY,QACb4J,EAAcnJ,EAAMkB,gBAAgC,SAAd+G,GAC/CtB,EAAKpH,UAAY,OACjB2I,EAAY3I,UAAY,OACxB4I,EAAQ5I,UAAY,QACpB6I,EAAU7I,UAAY,QACb8J,EAAWrJ,EAAMkB,gBAAgC,SAAd+G,IAC5CtB,EAAKpH,UAAY,OACjB2I,EAAY3I,UAAY,OACxB4I,EAAQ5I,UAAY,OACpB6I,EAAU7I,UAAY,SAIpB+J,EAAWtJ,EAAMkB,eACnBqH,EAAKhJ,UAAY,QAEjBgJ,EAAKhJ,UAAY,OAGD,WAAd0I,IACEsB,EAAgBvJ,EAAMkB,gBACpBlB,EAAMmB,aACRyH,EAAY7I,MAAO,EACnB4J,GAAe,EACfC,EAAW,QAEbpB,EAAUjJ,UAAY,QACtBkJ,EAAWlJ,UAAY,OACvBmJ,EAAOnJ,UAAY,QACViK,EAAiBxJ,EAAMkB,gBAC5BlB,EAAMmB,aACRyH,EAAY7I,MAAO,EACnB4J,GAAe,EACfC,EAAW,SAEbpB,EAAUjJ,UAAY,OACtBkJ,EAAWlJ,UAAY,QACvBmJ,EAAOnJ,UAAY,QACVkK,EAAazJ,EAAMkB,iBACxBlB,EAAMmB,aACRyH,EAAY7I,MAAO,EACnB4J,GAAe,EACfC,EAAW,QAEbpB,EAAUjJ,UAAY,OACtBkJ,EAAWlJ,UAAY,OACvBmJ,EAAOnJ,UAAY,UAInBS,EAAMmB,aACJ8H,EAAWjJ,EAAMkB,gBAAgC,SAAd+G,IACrCF,EAAKpB,MAAO,GAEVwC,EAAcnJ,EAAMkB,gBAAgC,SAAd+G,IACxCA,EAAY,YAEVqB,EAAWtJ,EAAMkB,gBAAiC,YAAd+G,GAAyC,WAAdA,GAAwC,SAAdA,IAC3FA,EAAY,QAEVmB,EAAapJ,EAAMkB,gBAAgC,SAAd+G,IACvCA,EAAY,UAEVoB,EAAWrJ,EAAMkB,gBAAgC,SAAd+G,IACrCA,EAAY,OACZY,OAKC,CACLb,QAASD,EAAKC,QACd5H,OAAQ2H,EAAK3H,OACbuG,KAAM,WAAa,OAAOoB,EAAKpB,MAC/BkD,MAAO,WAAa9B,EAAKpB,MAAO,KCjUfmD,E,WACnB,WAAYlK,GAAQ,uBAClB5C,KAAK4C,OAASA,EACd5C,KAAK4F,KAAOhD,EAAOgD,KAAOhD,EAAOgD,KAAO,GACxC5F,KAAK6F,QAAU,EACf7F,KAAK8F,QAAS,EACd9F,KAAK+M,YAAa,EAClB/M,KAAKgN,MAAQpK,EAAOoK,M,qDAGfpH,GACL5F,KAAK4F,KAAOA,EACZ5F,KAAK+M,YAAa,EAClB/M,KAAK8F,QAAS,I,8BAId9F,KAAK+M,YAAa,EAClB/M,KAAK4F,KAAO5F,KAAK4C,OAAOgD,KAAO5F,KAAK4C,OAAOgD,KAAO,K,6BAG5CpC,GACFxD,KAAK8F,SACP9F,KAAK4F,MAAQpC,EACbxD,KAAK6F,QAAUX,KAAKK,KAAKvF,KAAK4F,KAAO,MAEnC5F,KAAK4F,MAAQ,IACV5F,KAAK+M,kBACW9J,IAAfjD,KAAKgN,OACPhN,KAAKgN,QAEPhN,KAAK+M,YAAa,GAEpB/M,KAAK4F,KAAOV,KAAK+H,IAAI,Q,KC9BNC,E,WACnB,WAAatK,GAAQ,kCAEnB5C,KAAKmN,UAAY,GACjBnN,KAAKkD,OAAS,GAEdlD,KAAK2G,MAAQ/D,EAAO+D,MAAQ/D,EAAO+D,WAAQ1D,EAC3CjD,KAAKyG,MAAQ7D,EAAO6D,MAAQ7D,EAAO6D,WAAQxD,EAE3C,IAAIE,EAAY,GACZP,EAAOQ,QACTR,EAAOQ,OAAOC,KAAI,SAAAC,GAChBH,EAAUnG,KAAKsG,EAAEhE,KAAK,OAG1BU,KAAKmD,UAAYA,E,+DAGFK,GAEf,IADA,IAAI4J,EAAW,GACN5Q,EAAI,EAAGA,EAAIwD,KAAKmN,UAAUzQ,OAAQF,IAAK,CAC9C,IAAMsL,EAAK9H,KAAKmN,UAAU3Q,GAC1BsL,EAAGhG,EAAIgG,EAAGhG,EAAIgG,EAAGuF,KAAO7J,EAAcsE,EAAG7B,MACzC6B,EAAG/F,EAAI+F,EAAG/F,EAAI+F,EAAGwF,KAAO9J,EAAcsE,EAAG7B,MACzC6B,EAAG7F,UAAY6F,EAAG5B,aAAe1C,EACjCsE,EAAGyF,UAAY/J,EACXsE,EAAGyF,SAAW,GAChBH,EAASpQ,KAAK8K,GAGlB9H,KAAKmN,UAAYC,I,6BAGZ5J,EAAaR,GAClBhD,KAAKwN,gBAAgBhK,GACrBxD,KAAKmD,UAAUE,KAAI,SAAAC,GACjBA,EAAEE,EAAaR,Q,gCAIRlB,EAAGC,EAAG0L,GACf,IAAK,IAAIjR,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIkR,EAAwB,EAAhBxI,KAAKE,SAAeF,KAAKiB,GACjCF,EAAuB,GAAfT,IACZxF,KAAKmN,UAAUnQ,KAAK,CAClB8E,EAAGA,EACHC,EAAGA,EACHP,MAAO,GACPC,OAAQ,GACRyE,aAA6B,GAAfV,IACdvD,SAAU,EACVgE,MAAOA,EACPoH,KAAMnI,KAAKyI,IAAID,GACfJ,KAAMpI,KAAK0I,IAAIF,GACfH,SAA0B,IAAhBrI,KAAKE,c,4BAKdyI,EAAIC,EAAIC,GAGb,IAAK,IAAIvR,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIyJ,EAAwB,IAAhBf,KAAKE,SACjBpF,KAAKmN,UAAUnQ,KAAK,CAClB8E,EAAGkM,EAAOvI,UAAUoI,EAAIC,GACxB/L,EAAGgM,EACHvM,MAAO,GACPC,OAAQ,GACRyE,aAAoC,GAAtB8H,EAAOxI,aACrBvD,SAAU,EACVgE,MAAOA,EACPoH,KAAM,EACNC,KAAM,EACNC,SAA0B,IAAhBrI,KAAKE,c,6BAKbtD,EAAGC,EAAGkM,GACZ,IAAK,IAAIzR,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACf0I,KAAKE,SAAeF,KAAKiB,GAArC,IACIF,EAAwB,GAAhBf,KAAKE,SACbiI,EAAOnI,KAAK0I,KAAKK,EAAqB,GAAfzI,KACvB8H,EAAOpI,KAAKyI,IAAIM,EAAqB,GAAfzI,KACtB0I,EAAOhJ,KAAK0I,KAAKK,GACjBE,EAAOjJ,KAAKyI,IAAIM,GAEpBjO,KAAKmN,UAAUnQ,KAAK,CAClB8E,EAAGA,EAAW,GAAPoM,EACPnM,EAAGA,EAAW,GAAPoM,EACP3M,MAAO,GACPC,OAAQ,GACRyE,aAA6B,GAAfV,IACdvD,SAAU,EACVgE,MAAOA,EACPoH,KAAMA,EACNC,KAAMA,EACNC,SAA0B,IAAhBrI,KAAKE,c,6BAKb3E,GACN,IAAK,IAAIjE,EAAIwD,KAAKmN,UAAUzQ,OAAS,EAAGF,GAAK,EAAGA,IAAK,CACnD,IAAM4R,EAAOpO,KAAKmN,UAAU3Q,GAC5BiE,EAAQkB,OACRlB,EAAQmB,UAAUwM,EAAKtM,EAAGsM,EAAKrM,GAC/BtB,EAAQuB,OAAOoM,EAAKnM,UACpBxB,EAAQmB,WAAWwM,EAAKtM,GAAIsM,EAAKrM,GAEjCtB,EAAQiB,UACN1B,KAAK2G,MACL3G,KAAKyG,MAAM3E,EACX9B,KAAKyG,MAAM1E,EACX/B,KAAKyG,MAAMjF,MACXxB,KAAKyG,MAAMhF,OACX2M,EAAKtM,EAAKsM,EAAK5M,MAAQ,EACvB4M,EAAKrM,EAAKqM,EAAK3M,OAAS,EACxB2M,EAAK5M,MACL4M,EAAK3M,QAGPhB,EAAQ4B,e,KCvHRkE,EAAK,IAAIvF,MACfuF,EAAGtF,iBAAiB,QAAQ,eAG5BsF,EAAGnF,IAAMC,EAAQ,QAEjB,IAAIgN,EAAS,IAAIrH,EAAoB,CACnCnF,IAAK,CAACC,EAAG,IAAKC,EAAG,KACjBP,MAAO,GACPC,OAAQ,GACRc,UAAW,qBACX6D,YAAa,eACbH,MAAO,GACPlD,MAAM,EACNd,SAAU,EAAIiD,KAAKiB,GACnBe,iBAAkB,CAChB,CACEK,gBAAiB,CAACzF,EAAG,EAAGC,EAAG,GAC3B0F,aAAc,CAAC3F,EAAG,GAAIC,EAAG,MAG7B6E,eAAe,EACfD,MAAOmE,EAAON,aACdjE,GAAI,CACF+H,EAAG,CACD,CACExM,EAAG,EACHC,EAAG,EACHP,MAAO,IACPC,OAAQ,OAIdgF,MAAO,IACPvD,OAAQ,GAKRE,OAAQ,CACN,SAAmBI,EAAaR,GAC1BA,EAAMgB,KAAKnH,eAAe2L,EAAQO,OAChC/I,KAAK6B,IAAIC,EAAI,MACf9B,KAAK6B,IAAIC,GAAK9B,KAAKiG,MAAQzC,IAIjC,SAAoBA,EAAaR,GAC3BA,EAAMgB,KAAKnH,eAAe2L,EAAQQ,QAChChJ,KAAK6B,IAAIC,EAAI,MACf9B,KAAK6B,IAAIC,GAAK9B,KAAKiG,MAAQzC,IAIjC,SAAmBA,EAAaR,GAC1BhD,KAAKuO,mBACFvO,KAAKwO,MACRxO,KAAKkD,OAAOuL,UAAUzO,KAAK6B,IAAIC,EAAG9B,KAAK6B,IAAIE,QAOtCsM,ICrEThE,EAAY,IAAIrJ,MACtBqJ,EAAUpJ,iBAAiB,QAAQ,WACjCC,QAAQC,IAAI,wBAEdkJ,EAAUjJ,IAAMC,EAAQ,QAET,eAAUQ,GACvB,OAAO,IAAImF,EAAoB,CAC7BnF,MACAL,MAAO,GACPC,OAAQ,GACRc,UAAW,qBACX6D,YAAa,eACbH,MAAO,GACPlD,MAAM,EACNmE,iBAAkB,CAChB,CACEK,gBAAiB,CAACzF,EAAG,EAAGC,EAAG,GAC3B0F,aAAc,CAAC3F,EAAG,GAAIC,EAAG,MAG7B6E,eAAe,EACfD,MAAO0D,EACP9D,GAAI,CACF+H,EAAG,CACD,CACExM,EAAG,IACHC,EAAG,IACHP,MAAO,IACPC,OAAQ,OAIdgF,MAAO,IACPvD,OAAQ,GAKRE,OAAQ,CACN,SAAeI,EAAaR,GAC1BhD,KAAK6B,IAAIE,GAAK/B,KAAKiG,MAAQzC,EAC3BxD,KAAK4F,MAAQpC,GAEf,SAAoBA,EAAaR,GAC3BhD,KAAKuO,mBACPvO,KAAKwO,MAAO,QCzCP,SAASE,EAAY/H,EAAOF,EAAO5E,GAChD,OAAO,IAAImF,EAAoB,CAC7BnF,MACAL,MAAO,GACPC,OAAQ,GACRc,UAAW,qBACX6D,YAAa,eACbH,MAAO,IACPlD,MAAM,EACNd,SAAU,EACViF,iBAAkB,CAChB,CACEK,gBAAiB,CAACzF,EAAG,EAAGC,EAAG,GAC3B0F,aAAc,CAAC3F,EAAG,GAAIC,EAAG,MAG7B6E,eAAe,EACfD,QACAJ,GAAI,CACF+H,EAAG,CACD,CACExM,EAAG,EACHC,EAAG,EACHP,MAAO,IACPC,OAAQ,MAGZkN,EAAG,CACD,CACE7M,EAAG,EACHC,EAAG,EACHP,MAAO,IACPC,OAAQ,KAGZmN,EAAG,CACD,CACE9M,EAAG,EACHC,EAAG,EACHP,MAAO,IACPC,OAAQ,OAIdgF,QACAvD,OAAQ,GAKRE,OAAQ,CACN,SAAeI,EAAaR,GAC1B,GAAIhD,KAAK6O,KAAM,CACb,IAAIrS,EAAIwD,KAAK8O,UACTC,EAAK,EAAI/O,KAAKhB,EACdgQ,EAAUhP,KAAK6O,KAAKrS,GAAGyS,GAAGnN,EAAI9B,KAAKhB,EAAIgB,KAAK6O,KAAKrS,GAAG0S,GAAGpN,EAAIiN,EAC3DI,EAAUnP,KAAK6O,KAAKrS,GAAGyS,GAAGlN,EAAI/B,KAAKhB,EAAIgB,KAAK6O,KAAKrS,GAAG0S,GAAGnN,EAAIgN,EAC3DK,EAAUpP,KAAK6O,KAAKrS,GAAG0S,GAAGpN,EAAI9B,KAAKhB,EAAIgB,KAAK6O,KAAKrS,GAAG6S,GAAGvN,EAAIiN,EAC3DO,EAAUtP,KAAK6O,KAAKrS,GAAG0S,GAAGnN,EAAI/B,KAAKhB,EAAIgB,KAAK6O,KAAKrS,GAAG6S,GAAGtN,EAAIgN,EAC3DQ,EAAUvP,KAAK6O,KAAKrS,GAAG6S,GAAGvN,EAAI9B,KAAKhB,EAAIgB,KAAK6O,KAAKrS,GAAGgT,GAAG1N,EAAIiN,EAC3DU,EAAUzP,KAAK6O,KAAKrS,GAAG6S,GAAGtN,EAAI/B,KAAKhB,EAAIgB,KAAK6O,KAAKrS,GAAGgT,GAAGzN,EAAIgN,EAC3DW,EAASV,EAAUhP,KAAKhB,EAAIoQ,EAAUL,EACtCY,EAASR,EAAUnP,KAAKhB,EAAIsQ,EAAUP,EACtCa,EAASR,EAAUpP,KAAKhB,EAAIuQ,EAAUR,EACtCc,EAASP,EAAUtP,KAAKhB,EAAIyQ,EAAUV,EACtCe,EAASJ,EAAS1P,KAAKhB,EAAI4Q,EAASb,EACpCgB,EAASJ,EAAS3P,KAAKhB,EAAI6Q,EAASd,EAExC/O,KAAKiC,SAAWiD,KAAK8K,MAAMD,EAAS/P,KAAK6B,IAAIE,EAAG+N,EAAS9P,KAAK6B,IAAIC,GAC9D,GAAMoD,KAAKiB,GAEfnG,KAAK6B,IAAIC,EAAIgO,EACb9P,KAAK6B,IAAIE,EAAIgO,EAEb/P,KAAKhB,GAAKgB,KAAK6O,KAAKrS,GAAGyJ,MAEnBjG,KAAKhB,EAAI,IACXgB,KAAKhB,EAAI,EACLgB,KAAK6O,KAAKnS,SAAWsD,KAAK8O,UAAY,GAExC9O,KAAK6O,KAAO,KACZ7O,KAAKiC,SAAW,GAEhBjC,KAAK8O,kBAIT9O,KAAK6B,IAAIC,EAAI9B,KAAKiQ,YAAYnO,EAAI9B,KAAKkQ,cAAcpO,EACrD9B,KAAK6B,IAAIE,EAAI/B,KAAKiQ,YAAYlO,EAAI/B,KAAKkQ,cAAcnO,EACrD/B,KAAKmQ,OAAQ,EACbnQ,KAAKoQ,MAAO,GAGhB,SAAgB5M,EAAaR,GAC3B,IAAI0C,EAAOR,KAAKE,SACZpF,KAAKmQ,OAAUzK,EAAO,MACxB1F,KAAKkD,OAAOiN,MAAMnQ,KAAK6B,MAG3B,SAAmB2B,EAAaR,GAC1BhD,KAAKuO,mBACFvO,KAAKqQ,OASRrQ,KAAKqQ,MAAQ,EACbrQ,KAAK2G,MAAQmE,EAAOD,eATpB7K,KAAKwO,MAAO,EACZxO,KAAKkD,OAAOiH,UAAUnK,KAAK6B,IAAIC,EAAG9B,KAAK6B,IAAIE,GACvC/B,KAAK6O,KACP7O,KAAKkD,OAAO0F,MAAmB,EAAb5I,KAAK4I,OAEvB5I,KAAKkD,OAAO0F,MAAM5I,KAAK4I,SAOzB5I,KAAKsQ,aACHtQ,KAAK6B,IAAIC,EAAI,MAAQ9B,KAAK6B,IAAIC,GAAK,OACrC9B,KAAKwO,MAAO,IAEVxO,KAAK6B,IAAIE,EAAI,MAAQ/B,KAAK6B,IAAIE,GAAK,OACrC/B,KAAKwO,MAAO,Q,4kBCrGT,SAAS+B,KACtB,IAAI7P,EAAS2I,SAASmH,eAAe,aACjC/P,EAAUC,EAAO+P,WAAW,MAE5BC,EAAeC,YAAYC,MAE/BnQ,EAAQoQ,uBAAwB,EAEhCpI,IAEA,IAAIzF,EAAQ,IAAIe,EAAMrD,GAElBoQ,EAAO,IAAIpN,EAAS,CACtBxB,MAAO,CAGLJ,EAAG,EACHC,EAAG,GAELF,IAAK,CACHC,EAAG,EACHC,EAAG,GAELE,SAAU,EACVe,MAAOA,EACPW,WAAY,CAAC7B,EAAG,EAAGC,EAAG,GACtBqB,OAAQ,KAKNhB,GAFc,IAAIuD,EAET,IAAInF,EAAOC,EAASC,EAAQ,CAACoQ,GAAO,2BAG3CzG,EAAY,IAAIrJ,MACtBqJ,EAAUpJ,iBAAiB,QAAQ,WACjCC,QAAQC,IAAI,wBAEdkJ,EAAUjJ,IAAMC,EAAQ,QAExB,IAAM8I,EAAY,IAAI+C,EAAU,CAC9BvG,MAAO0D,EACP5D,MAAO,CACL3E,EAAG,IACHC,EAAG,IACHP,MAAO,IACPC,OAAQ,OAINiK,EAAS,IAAIwB,EAAU,CAC3BvG,MAAO0D,EACP5D,MAAO,CACL3E,EAAG,IACHC,EAAG,IACHP,MAAO,IACPC,OAAQ,OAIRsP,EAAY,EACZC,GAAc,EACdC,EAAa,EACbC,EAAQ,EAGRtI,EAAQ,EACRyH,EAAQ,EACRc,GAAa,EACbC,EAAc,GACdC,EAAe,IACfC,EAAW,EACXC,EAAa,EACbC,EAAU,EACVC,EAAc,GACdC,EAAU,GACVC,EAAe,GACfzB,EAAgB,CAACpO,EAAG,EAAGC,EAAG,GAC1B6P,EAAyB,EAE7B,SAASC,IACPF,EAAe,GACf,IAAK,IAAInV,EAAI,EAAGA,EAAI6T,EAAO7T,IACzBmV,EAAa3U,KAAK,IAAIgK,EAAoB,CACxCnF,IAAK,CAACC,EAAG,GAAKtF,EAAI,GAAIuF,EAAG,KACzBP,MAAO,GACPC,OAAQ,GACRsB,MAAM,EACNd,SAAU,EAAIiD,KAAKiB,GACnBe,iBAAkB,GAMlBN,eAAe,EACfD,MAAOmE,EAAON,aACdjE,GAAI,CACF+H,EAAG,CACD,CACExM,EAAG,EACHC,EAAG,EACHP,MAAO,IACPC,OAAQ,OAIdgF,MAAO,OAMb,SAASqL,IACP/H,EAAOG,MAAMP,OACbyH,EAAYpU,KAAK+U,EAAKC,EAAOnQ,MAC7BuP,EAAYA,EAAY1U,OAAS,GAAGkJ,KAAO,IAC3C2L,IAGF,SAASU,EAAYpQ,GACnB4P,EAAYzU,KAAK+U,EAAKlQ,IACtB4P,EAAYA,EAAY/U,OAAS,GAAGuJ,OAAS,GAC7CwL,EAAYA,EAAY/U,OAAS,GAAGkJ,KAAO,IAZ7CiM,IAeA,IAEIK,EAAY,IAAIpF,EAAM,CACxBlH,KAAM,IACNoH,MAAO,eAKLmF,EAAkB,IAAIrF,EAAM,CAC9BlH,KAAM,IACNoH,MAAO,eAKLoF,EAAc,IAAItF,EAAM,CAC1BlH,KAAM,IACNoH,MAAO,eAcLqF,GATc,IAAIvF,EAAM,CAC1BlH,KAAM,IACNoH,MAAO,WACL9L,QAAQC,IAAI,cACZ4P,EAAY,EACZuB,GAAKzF,WAIO,IAAIlI,EAAK,CACvBE,KAAM,UACND,KAAM,gBACNrC,UAAW,QACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,KACjBgB,MAAM,KAGJwP,GAAY,IAAI5N,EAAK,CACvBE,KAAM,WACND,KAAM,gBACNrC,UAAW,QACXV,IAAK,CAACC,EAAG,GAAIC,EAAG,IAChBgB,MAAM,IAGJyP,GAAe,IAAI7N,EAAK,CAC1BE,KAAM,mBACND,KAAM,gBACNrC,UAAW,QACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,KACjBgB,MAAM,IAGJ0P,GAAe,IAAI9N,EAAK,CAC1BE,KAAM,sBACND,KAAM,gBACNrC,UAAW,QACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,KACjBgB,MAAM,IAGJ2P,GAAe,IAAI/N,EAAK,CAC1BE,KAAM,sBACND,KAAM,gBACNrC,UAAW,QACXV,IAAK,CAACC,EAAG,IAAKC,EAAG,KACjBgB,MAAM,IAGJ4P,IAAU,EACVC,IAAU,EACVC,IAAU,EACVC,IAAU,EACVC,IAAU,EACVC,IAAU,EACVC,IAAiB,EACjBC,GAAW,EACXC,GAAY,GACZC,GAAU,EACVC,GAAS,IAETC,GAAM,EACNpF,GAAO,IACPC,GAAO,IAEX,SAASoF,GAAa/P,GACpB4P,IAAW5P,EACP4P,GAAUC,KACZD,IAAWC,GACX3B,EAAQ1U,KAAK0R,EAAW5D,EAAOR,WAAY,IAAK,CAACxI,EAAGoM,GAAa,GAANoF,GAAUvR,EAAGoM,GAAO,KAC/EuD,EAAQA,EAAQhV,OAAS,GAAGwG,OAAOiH,UAAY,SAAUrI,EAAGC,GAC1DoI,EAAUA,UAAUrI,EAAGC,GACvBgI,EAAOI,UAAUR,QAEnB+H,EAAQA,EAAQhV,OAAS,GAAGwG,OAAO0F,MAAQ,SAAU4K,GACnD5K,GAAS4K,GAEX9B,EAAQA,EAAQhV,OAAS,GAAGwG,OAAOiN,MAAQ,SAAUtO,GACnDoQ,EAAYpQ,IAEd6P,EAAQA,EAAQhV,OAAS,GAAGmS,KAAO,CACjC,CACEI,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBC,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,GAAM,IACrBvJ,MAAO,KAET,CACEgJ,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBC,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,GAAI,EAAK,KACnBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,KAET,CACEgJ,GAAI,CAAC,EAAKf,GAAa,GAANoF,GAAU,EAAKnF,GAAO,GACvCe,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,MAGXyL,EAAQA,EAAQhV,OAAS,GAAGsC,EAAI,EAChC0S,EAAQA,EAAQhV,OAAS,GAAGkM,MAAQ,GACpC8I,EAAQA,EAAQhV,OAAS,GAAGoS,UAAY,EACxC4C,EAAQA,EAAQhV,OAAS,GAAGwT,cAAgB,CAACpO,EAAG,EAAGC,EAAG,GACtD2P,EAAQA,EAAQhV,OAAS,GAAGuT,YAAc,CAACnO,EAAGoM,GAAa,GAANoF,GAAUvR,EAAGoM,GAAO,GAC3D,IAAV+C,IACFQ,EAAQA,EAAQhV,OAAS,GAAGmS,KAAK,GAAK,CACpCI,GAAI,CAAC,GAAM,IAAK,EAAK,KACrBC,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,KAETyL,EAAQA,EAAQhV,OAAS,GAAG4T,WAAY,GAK1CoB,EAAQ1U,KAAK0R,EAAW5D,EAAOP,UAAW,IAAK,CAACzI,EAAGoM,GAAa,GAANoF,GAAUvR,EAAGoM,GAAO,OAC9EuD,EAAQA,EAAQhV,OAAS,GAAGwG,OAAOiH,UAAY,SAAUrI,EAAGC,GAC1DoI,EAAUA,UAAUrI,EAAGC,GACvBgI,EAAOI,UAAUR,QAEnB+H,EAAQA,EAAQhV,OAAS,GAAGwG,OAAO0F,MAAQ,SAAU4K,GACnD5K,GAAS4K,GAEX9B,EAAQA,EAAQhV,OAAS,GAAGwG,OAAOiN,MAAQ,SAAUtO,GACnDoQ,EAAYpQ,IAEd6P,EAAQA,EAAQhV,OAAS,GAAGmS,KAAO,CACjC,CACEI,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBC,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,GAAM,IACrBvJ,MAAO,KAET,CACEgJ,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBC,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,KAET,CACEgJ,GAAI,CAAC,EAAKf,GAAa,GAANoF,GAAU,EAAKnF,GAAO,KACvCe,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,MAGXyL,EAAQA,EAAQhV,OAAS,GAAGsC,EAAI,EAChC0S,EAAQA,EAAQhV,OAAS,GAAGkM,MAAQ,GACpC8I,EAAQA,EAAQhV,OAAS,GAAGoS,UAAY,EACxC4C,EAAQA,EAAQhV,OAAS,GAAGwT,cAAgB,CAACpO,EAAG,EAAGC,EAAG,GACtD2P,EAAQA,EAAQhV,OAAS,GAAGuT,YAAc,CAACnO,EAAGoM,GAAa,GAANoF,GAAUvR,EAAGoM,GAAO,KACzEuD,EAAQA,EAAQhV,OAAS,GAAGwG,OAAOiN,MAAQ,SAAUtO,GACnDoQ,EAAYpQ,IAGA,IAAVqP,IACFQ,EAAQA,EAAQhV,OAAS,GAAGmS,KAAK,GAAK,CACpCI,GAAI,CAAC,EAAK,KAAM,EAAK,KACrBC,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,KAETyL,EAAQA,EAAQhV,OAAS,GAAG4T,WAAY,GAI1CgD,KACIA,GAAM,IACRA,GAAM,GAGRJ,IAAY,EACRA,IAAYC,KACdP,IAAU,EACV3B,EAAa,EACbiB,EAAUlF,MAAQ,WACF,IAAVkE,GACF2B,IAAU,EACVK,GAAW,EACXC,GAAY,GACO,IAAVjC,EACT+B,IAAiB,EACE,IAAV/B,IACTiC,GAAY,EACZD,GAAW,EACXjC,EAAa,EACb+B,IAAU,IAGdd,EAAU9I,MAAM,OAKtB,SAASqK,GAAcjQ,GACrB4P,IAAW5P,EACP4P,GAAUC,KACZD,IAAWC,GACX3B,EAAQ1U,KAAK0R,EAAW5D,EAAOJ,YAAa,IAAK,CAAC5I,EAAGoM,GAAa,GAANoF,GAAUvR,EAAG,OACzE2P,EAAQA,EAAQhV,OAAS,GAAGwG,OAAOiH,UAAY,SAAUrI,EAAGC,GAC1DoI,EAAUA,UAAUrI,EAAGC,GACvBgI,EAAOI,UAAUR,QAEnB+H,EAAQA,EAAQhV,OAAS,GAAGwG,OAAO0F,MAAQ,SAAU4K,GACnD5K,GAAS4K,GAEX9B,EAAQA,EAAQhV,OAAS,GAAGmS,KAAO,CACjC,CACEI,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBC,GAAI,CAAC,EAAK,EAAG,EAAK,MAClBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,GAAM,GAAI,EAAK,KACpBvJ,MAAO,KAET,CACEgJ,GAAK,CAACnN,EAAGoM,GAAa,GAANoF,GAAUvR,EAAG,KAC7BmN,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,MAGXyL,EAAQA,EAAQhV,OAAS,GAAGsC,EAAI,EAChC0S,EAAQA,EAAQhV,OAAS,GAAGkM,MAAQ,IACpC8I,EAAQA,EAAQhV,OAAS,GAAGoS,UAAY,EACxC4C,EAAQA,EAAQhV,OAAS,GAAGwT,cAAgB,CAACpO,EAAG,EAAGC,EAAG,GACtD2P,EAAQA,EAAQhV,OAAS,GAAGuT,YAAc,CAACnO,EAAGoM,GAAa,GAANoF,GAAUvR,EAAG,KAClE2P,EAAQA,EAAQhV,OAAS,GAAG2T,MAAQ,EACpCqB,EAAQA,EAAQhV,OAAS,GAAGwG,OAAOiN,MAAQ,SAAUtO,GACnDoQ,EAAYpQ,IAGA,IAAVqP,IACFQ,EAAQA,EAAQhV,OAAS,GAAG4T,WAAY,EACxCoB,EAAQA,EAAQhV,OAAS,GAAGmS,KAAK,GAAK,CACpCI,GAAK,CAACnN,EAAG,KAAMC,GAAI,KACnBmN,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,MAKXqN,KACIA,GAAM,IACRA,GAAM,GAGRJ,IAAY,EACRA,IAAYC,KACdN,IAAU,EACV5B,EAAa,EACbiB,EAAUlF,MAAQ,WACF,IAAVkE,GACF4B,IAAU,EACVI,GAAW,EACXC,GAAY,GACO,IAAVjC,GACT8B,IAAU,EACV/B,EAAa,EACbkC,GAAY,EACZD,GAAW,EACXI,GAAM,GACa,IAAVpC,IACT+B,IAAiB,IAGrBf,EAAU9I,MAAM,OAKtB,SAASsK,GAAclQ,GACrB4P,IAAW5P,EACP4P,GAAUC,KACZD,IAAWC,GACX3B,EAAQ1U,KAAK0R,EAAW5D,EAAOH,aAAc,IAAK,CAAC7I,EAAGoM,GAAa,GAANoF,GAAUvR,EAAG,OAC1E2P,EAAQA,EAAQhV,OAAS,GAAGwG,OAAOiH,UAAY,SAAUrI,EAAGC,GAC1DoI,EAAUA,UAAUrI,EAAGC,GACvBgI,EAAOI,UAAUR,QAEnB+H,EAAQA,EAAQhV,OAAS,GAAGwG,OAAO0F,MAAQ,SAAU4K,GACnD5K,GAAS4K,GAEX9B,EAAQA,EAAQhV,OAAS,GAAGmS,KAAO,CACjC,CACEI,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBC,GAAI,CAAC,EAAK,KAAM,EAAK,MACrBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,KAAM,EAAK,KACrBvJ,MAAO,KAET,CACEgJ,GAAK,CAACnN,EAAGoM,GAAa,GAANoF,GAAUvR,EAAG,KAC7BmN,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,MAGXyL,EAAQA,EAAQhV,OAAS,GAAGsC,EAAI,EAChC0S,EAAQA,EAAQhV,OAAS,GAAGkM,MAAQ,IACpC8I,EAAQA,EAAQhV,OAAS,GAAGoS,UAAY,EACxC4C,EAAQA,EAAQhV,OAAS,GAAGwT,cAAgB,CAACpO,EAAG,EAAGC,EAAG,GACtD2P,EAAQA,EAAQhV,OAAS,GAAGuT,YAAc,CAACnO,EAAGoM,GAAa,GAANoF,GAAUvR,EAAG,KAClE2P,EAAQA,EAAQhV,OAAS,GAAG2T,MAAQ,EACpCqB,EAAQA,EAAQhV,OAAS,GAAGwG,OAAOiN,MAAQ,SAAUtO,GACnDoQ,EAAYpQ,IAGA,IAAVqP,IACFQ,EAAQA,EAAQhV,OAAS,GAAG4T,WAAY,EACxCoB,EAAQA,EAAQhV,OAAS,GAAGmS,KAAK,GAAK,CACpCI,GAAK,CAACnN,EAAG,EAAGC,GAAI,KAChBmN,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,MAIXqN,KACIA,GAAM,IACRA,GAAM,GAGRJ,IAAY,EACRA,IAAYC,KACdL,IAAU,EACV7B,EAAa,EACbiB,EAAUlF,MAAQ,WACF,IAAVkE,GACF6B,IAAU,EACVG,GAAW,EACXC,GAAY,EACZG,GAAM,GACa,IAAVpC,GAAyB,IAAVA,IACxB2B,IAAU,EACV5B,EAAa,EACbkC,GAAY,EACZD,GAAW,IAGfhB,EAAU9I,MAAM,OAKtB,SAASuK,GAAcnQ,GACrB4P,IAAW5P,EACP4P,GAAUC,KACZD,IAAWC,GACX3B,EAAQ1U,KAAK0R,EAAW5D,EAAOF,UAAW,IAAK,CAAC9I,EAAGoM,GAAO,EAAU,GAANoF,GAAUvR,EAAG,OAC3E2P,EAAQA,EAAQhV,OAAS,GAAG8E,MAAQ,GACpCkQ,EAAQA,EAAQhV,OAAS,GAAGwK,iBAAiB,GAAGO,aAAa3F,EAAI,GACjE4P,EAAQA,EAAQhV,OAAS,GAAGwG,OAAOiH,UAAY,SAAUrI,EAAGC,GAC1DoI,EAAUA,UAAUrI,EAAGC,GACvBgI,EAAOI,UAAUR,QAEnB+H,EAAQA,EAAQhV,OAAS,GAAGwG,OAAO0F,MAAQ,SAAU4K,GACnD5K,GAAS4K,GAEX9B,EAAQA,EAAQhV,OAAS,GAAGmS,KAAO,CACjC,CACEI,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBC,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,GAAM,IACrBvJ,MAAO,KAET,CACEgJ,GAAI,CAACnN,EAAGoM,GAAO,EAAU,GAANoF,GAAUvR,EAAG,KAChCmN,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,GAAM,IAAK,EAAK,KACrBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,MAGXyL,EAAQA,EAAQhV,OAAS,GAAGsC,EAAI,EAChC0S,EAAQA,EAAQhV,OAAS,GAAGkM,MAAQ,GACpC8I,EAAQA,EAAQhV,OAAS,GAAGoS,UAAY,EACxC4C,EAAQA,EAAQhV,OAAS,GAAGwT,cAAgB,CAACpO,EAAG,EAAGC,EAAG,GACtD2P,EAAQA,EAAQhV,OAAS,GAAGuT,YAAc,CAACnO,EAAGoM,GAAO,EAAU,GAANoF,GAAUvR,EAAG,KACtE2P,EAAQA,EAAQhV,OAAS,GAAGwG,OAAOiN,MAAQ,SAAUtO,GACnDoQ,EAAYpQ,IAGA,IAAVqP,IACFQ,EAAQA,EAAQhV,OAAS,GAAG4T,WAAY,EACxCoB,EAAQA,EAAQhV,OAAS,GAAGmS,KAAK,GAAK,CACpCI,GAAI,CAACnN,EAAG,IAAKC,GAAI,KACjBmN,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,GAAM,IAAK,EAAK,KACrBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,MAIXqN,KACIA,GAAM,IACRA,GAAM,GAGRJ,IAAY,EACRA,IAAYC,KACdJ,IAAU,EACV9B,EAAa,EACbiB,EAAUlF,MAAQ,WACF,IAAVkE,GACF8B,IAAU,EACVE,GAAW,EACXC,GAAY,GACO,IAAVjC,GACTD,EAAa,EACb2B,IAAU,EACVO,GAAY,GACZD,GAAW,GACQ,IAAVhC,IACTD,EAAa,EACb6B,IAAU,EACVK,GAAY,EACZD,GAAW,IAGfhB,EAAU9I,MAAM,OAKtB,SAASwK,GAAcpQ,GACrB4P,IAAW5P,EACP4P,GAAUC,KACZD,IAAWC,GACX3B,EAAQ1U,KAAK0R,EAAW5D,EAAOF,UAAW,IAAK,CAAC9I,EAAGoM,GAAO,EAAU,GAANoF,GAAUvR,EAAG,OAC3E2P,EAAQA,EAAQhV,OAAS,GAAG8E,MAAQ,GACpCkQ,EAAQA,EAAQhV,OAAS,GAAGwK,iBAAiB,GAAGO,aAAa3F,EAAI,GACjE4P,EAAQA,EAAQhV,OAAS,GAAGwG,OAAOiH,UAAY,SAAUrI,EAAGC,GAC1DoI,EAAUA,UAAUrI,EAAGC,GACvBgI,EAAOI,UAAUR,QAEnB+H,EAAQA,EAAQhV,OAAS,GAAGwG,OAAO0F,MAAQ,SAAU4K,GACnD5K,GAAS4K,GAEX9B,EAAQA,EAAQhV,OAAS,GAAGmS,KAAO,CACjC,CACEI,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBC,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,GAAM,IACrBvJ,MAAO,KAET,CACEgJ,GAAI,CAACnN,EAAGoM,GAAO,EAAU,GAANoF,GAAUvR,EAAG,KAChCmN,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,KAAM,EAAK,KACrBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,MAGXyL,EAAQA,EAAQhV,OAAS,GAAGsC,EAAI,EAChC0S,EAAQA,EAAQhV,OAAS,GAAGkM,MAAQ,GACpC8I,EAAQA,EAAQhV,OAAS,GAAGoS,UAAY,EACxC4C,EAAQA,EAAQhV,OAAS,GAAGwT,cAAgB,CAACpO,EAAG,EAAGC,EAAG,GACtD2P,EAAQA,EAAQhV,OAAS,GAAGuT,YAAc,CAACnO,EAAGoM,GAAO,EAAU,GAANoF,GAAUvR,EAAG,KACtE2P,EAAQA,EAAQhV,OAAS,GAAGwG,OAAOiN,MAAQ,SAAUtO,GACnDoQ,EAAYpQ,IAGA,IAAVqP,IACFQ,EAAQA,EAAQhV,OAAS,GAAG4T,WAAY,EACxCoB,EAAQA,EAAQhV,OAAS,GAAGmS,KAAK,GAAK,CACpCI,GAAI,CAAC,EAAK,IAAK,GAAM,KACrBC,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,KAAM,EAAK,KACrBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,MAIXqN,KACIA,GAAM,IACRA,GAAM,GAGRJ,IAAY,EACRA,IAAYC,KACdH,IAAU,EACVd,EAAUlF,MAAQ,WACF,IAAVkE,GACFD,EAAa,EACbgC,IAAiB,GACE,IAAV/B,GAAyB,IAAVA,IACxBD,EAAa,EACb8B,IAAU,EACVI,GAAY,EACZD,GAAW,IAGfhB,EAAU9I,MAAM,OAKtB,IAAIyK,GAAQ,CACV,CACE,CACErE,GAAI,CAAC1N,EAAGoM,GAAa,GAANoF,GAAUvR,EAAG,KAC5BmN,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBJ,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBhJ,MAAO,KAET,CACEgJ,GAAI,CAAC,GAAM,GAAI,EAAK,MACpBC,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,KAET,CACEgJ,GAAI,CAACnN,EAAGoM,GAAa,GAANoF,GAAUvR,EAAG,KAC5BmN,GAAI,CAAC,EAAK,IAAK,EAAK,GACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,GACpBG,GAAI,CAAC,EAAK,IAAK,GAAM,KACrBvJ,MAAO,MAGX,CACE,CACEuJ,GAAI,CAAC1N,EAAGoM,GAAa,GAANoF,GAAUvR,EAAG,KAC5BmN,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBJ,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBhJ,MAAO,KAET,CACEgJ,GAAI,CAAC,EAAK,KAAM,EAAK,MACrBC,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,KACpBvJ,MAAO,KAET,CACEgJ,GAAI,CAACnN,EAAGoM,GAAa,GAANoF,GAAUvR,EAAG,KAC5BmN,GAAI,CAAC,EAAK,IAAK,EAAK,GACpBG,GAAI,CAAC,EAAK,IAAK,EAAK,GACpBG,GAAI,CAAC,EAAK,IAAK,GAAM,KACrBvJ,MAAO,OAKb,SAAS6N,GAAUtQ,GACjB,GAAIkO,EAAQhV,OAAS,IACnB0W,IAAW5P,EACP4P,GAAmB,GAATC,IAAa,CACzBD,IAAoB,GAATC,GACV,IAAI7W,EAAIwR,EAAO3I,aAAa,EAAGqM,EAAQhV,OAAS,GACjD,IAAKgV,EAAQlV,GAAGqS,KAAM,CACpB,IAAIkF,EAAK/F,EAAO3I,aAAa,EAAGwO,GAAMnX,OAAS,GAC/CgV,EAAQlV,GAAGqS,KAAX,eAAsBgF,GAAME,IAC5BrC,EAAQlV,GAAGqS,KAAK,GAAGW,GAAnB,KAA4BkC,EAAQlV,GAAGqF,KACvC6P,EAAQlV,GAAGqS,KAAK6C,EAAQlV,GAAGqS,KAAKnS,OAAS,GAAGuS,GAA5C,KAAqDyC,EAAQlV,GAAGyT,aAChEyB,EAAQlV,GAAGsS,UAAY,IAO/B,SAAS1F,MACD,EACNW,EAAOK,OAAOR,YAAc,EAC5BG,EAAOK,OAAOT,OACdwH,GAAa,EACbe,EAAUlF,MAAQ,WAChBmE,GAAa,EACb6C,MAEF9B,EAAU9I,MAAM,KAChB4I,EAAOjP,MAAO,EACdiP,EAAOxD,MAAO,EACd6B,EAAQ,EACRzH,EAAQ,EACR8I,EAAQhV,OAAS,EACjB8V,GAAazP,MAAO,EACpB0P,GAAa1P,MAAO,EACpB2P,GAAa3P,MAAO,EACpB8O,IAGF,SAASmC,KACPf,IAAiB,EACjBZ,EAAUxN,KAAO,UACjBwN,EAAUtP,MAAO,EACjBoP,EAAgBnF,MAAQ,WACtBqF,EAAUtP,MAAO,EACjB6P,IAAU,EACV3B,EAAa,EACbC,EAAQ,EACRgC,GAAW,EACXC,GAAY,IAEdhB,EAAgB/I,MAAM,KAGxB,SAAS6K,KACPhB,IAAiB,EACjBZ,EAAUxN,KAAO,UACjBwN,EAAUtP,MAAO,EACjBoP,EAAgBnF,MAAQ,WACtBqF,EAAUtP,MAAO,EACjBqQ,GAAU,EACVN,IAAU,EACV7B,EAAa,EACbC,EAAQ,EACRiC,GAAY,EACZD,GAAW,GAEbf,EAAgB/I,MAAM,KAGxB,SAAS8K,KACPjB,IAAiB,EACjBZ,EAAUxN,KAAO,kBACjBwN,EAAUtP,MAAO,EACjBoP,EAAgBnF,MAAQ,WACtBqF,EAAUtP,MAAO,EACjBmO,EAAQ,EACR0B,IAAU,EACVO,GAAY,GACZD,GAAW,EACXjC,EAAa,GAEfkB,EAAgB/I,MAAM,KAGxB,SAAS+K,GAAqB3Q,GAC5B,IAAIyC,EAAQ,IAEViK,EAAcpO,GADZ8P,EAAyB,IACR3L,EAAQzC,GAEPyC,EAAQzC,EAE9BoO,GAA0BpO,EACtBoO,EAAyB,MAC3BA,EAAyB,GAI7B,SAASwC,GAAOC,EAAUC,GACxB,IAAIC,EAAM,SAASA,EAAIC,EAAEC,GACvB,OAAOA,EAAIF,EAAIE,EAAGD,EAAEC,GAAKD,GAG3B,OADAD,EAAMA,EAAIF,EAAUC,GACb,CAACD,EAAUE,EAAKD,EAAYC,GAGrC,IAAMjC,GAAOoC,IAEb1C,EAAO9O,OAAOuL,UAAY,SAAU3M,EAAGC,GAOrC,GANAb,QAAQC,IAAI,QACZgJ,EAAUA,UAAUrI,EAAGC,GACvBgI,EAAOI,UAAUR,OACjBqI,EAAOxD,MAAO,EACdwD,EAAOjP,MAAO,EACdsN,GAAS,EACLA,GAAS,EACX+B,EAAYpF,MAAQ,WAClBgF,EAAOnQ,IAAIC,EAAI,IACfkQ,EAAOjP,MAAO,EACdoH,EAAUwK,MAAM3C,EAAOnQ,IAAIC,EAAIkQ,EAAOxQ,MAAQ,EAAGwQ,EAAOnQ,IAAIC,EAAIkQ,EAAOxQ,MAAQ,EAAGwQ,EAAOnQ,IAAIE,EAAIiQ,EAAOvQ,OAAS,GACjHuQ,EAAOxD,MAAO,EACdqD,KAEFO,EAAYhJ,MAAM,SACb,CACLoJ,GAAa3N,KAAb,uBAAoC0M,GACpCiB,GAAazP,MAAO,EACpB0P,GAAa5N,KAAb,uBAAoC2M,GACpCiB,GAAa1P,MAAO,EACpB,IAAI6R,EAAQR,GAAO5C,EAASD,GAC5BmB,GAAa7N,KAAb,0BAAuC+P,EAAM,GAA7C,YAAmDA,EAAM,IACzDlC,GAAa3P,MAAO,EAGpB,IADA,IAAI8R,GAAQ,EACHrY,EAAI,EAAGA,EAAIgM,EAAQU,WAAWxM,OAAQF,IAC7C,GAAIoM,EAAQJ,EAAQU,WAAW1M,GAAI,CACjCqY,GAAQ,EACRrM,EAAQU,WAAWtL,OAAOpB,EAAG,EAAGoM,GAChC,MAGCiM,GAAOrM,EAAQU,WAAWlM,KAAK4L,GACpCT,IAEAiK,EAAYpF,MAAQ,WAClB+D,EAAY,EACZhH,EAAOK,OAAOP,OACdyI,GAAKzF,SAEPuF,EAAYhJ,MAAM,OAItB,IAAI0L,GAAO,EAEX,SAAS1R,GAAOI,GAed,OAbAsR,IAAQtR,EACJsR,GAAO,MACTA,GAAO,GAKL9D,IACFA,GAAc,GAGhBF,EAAK1N,OAAOI,EAAaR,GAEjB+N,GACN,KAAK,EACHuB,GAAKlP,OAAOJ,GACRsP,GAAK3I,SACPoH,EAAY,EACZvI,EAAQI,MAAQ,EAChBQ,MAEF,MACF,KAAK,EAcH,OAbA8I,EAAU9O,OAAOI,GACjB2O,EAAgB/O,OAAOI,GACvB4O,EAAYhP,OAAOI,GACnB2G,EAAU/G,OAAOI,GACjB+O,GAAU1N,KAAV,iBAA2B+D,GACvB5F,EAAMgB,KAAKnH,eAAe2L,EAAQS,OAChCqI,EAAWD,IACbS,IACAR,EAAW,GAGfA,GAAY9N,EAEJyN,GACN,KAAK,EACC2B,IACFW,GAAa/P,GAEf,MACF,KAAK,EACCqP,IACFY,GAAajQ,GAEf,MACF,KAAK,EACCsP,IACFY,GAAalQ,GAEf,MACF,KAAK,EACCuP,IACFY,GAAanQ,GAEf,MACF,KAAK,EACCwP,IACFY,GAAapQ,GAEf,MACF,KAAK,EACHsQ,GAAStQ,GACT,MAIJ,IADA,IAAIuR,EAAW,GACNvY,EAAI,EAAGA,EAAI4U,EAAY1U,OAAQF,IACtC4U,EAAY5U,GAAG2K,gBAAkBuK,EACjCN,EAAY5U,GAAG4G,OAAOI,EAAaR,GAC/BoO,EAAY5U,GAAGoJ,KAAO,IAAMwL,EAAY5U,GAAGwY,aAC7CD,EAAS/X,KAAKoU,EAAY5U,IAExB4U,EAAY5U,GAAGgS,OACjBgD,IACAJ,EAAY5U,GAAGwY,aAAc,GAGjC5D,EAAc2D,EAEdZ,GAAoB3Q,GAEpB,IAAIyR,EAAa,GACjBtC,IAAU,EACV,IAAK,IAAInW,EAAI,EAAGA,EAAIkV,EAAQhV,OAAQF,IAC9BwV,EAAOjP,KACT2O,EAAQlV,GAAG2K,gBAAX,eAAiCiK,GAEjCM,EAAQlV,GAAG2K,gBAAX,yBAAiCiK,GAAjC,CAA8C/C,IAEhDqD,EAAQlV,GAAG4G,OAAOI,EAAaR,GAC/B0O,EAAQlV,GAAG0T,cAAgBA,EACvByC,KAAYjB,EAAQlV,GAAG4T,OACzBuC,IAAU,GAEPjB,EAAQlV,GAAGgS,MACdyG,EAAWjY,KAAK0U,EAAQlV,IAG5BkV,EAAUuD,EACa,IAAnBvD,EAAQhV,SACViW,IAAU,GAERM,IAAqC,IAAnBvB,EAAQhV,SACd,IAAVwU,EACF+C,KACmB,IAAV/C,EACTgD,KACmB,IAAVhD,GACT8C,MAMJ,IADA,IAAIkB,EAAiB,GACZ1Y,EAAI,EAAGA,EAAIiV,EAAY/U,OAAQF,IAClCwV,EAAOjP,KACT0O,EAAYjV,GAAG2K,gBAAkB,GAEjCsK,EAAYjV,GAAG2K,gBAAkB,CAAC6K,GAEpCP,EAAYjV,GAAG4G,OAAOI,EAAaR,GAC/ByO,EAAYjV,GAAGoJ,KAAO,IAAM6L,EAAYjV,GAAGwY,aAC7CE,EAAelY,KAAKyU,EAAYjV,IAE9BiV,EAAYjV,GAAGgS,OACjBiD,EAAYjV,GAAGwY,aAAc,GAGjCvD,EAAcyD,EAET/D,IACHa,EAAO7K,gBAAP,yBAA6BsK,GAA7B,eAA6CC,IAC7CM,EAAO5O,OAAOI,EAAaR,IAG7B,MACF,QACE,MAGJA,EAAMmS,QAIR,SAASC,GAASxP,GAChB,IAAIpC,EAAcoC,EAAO8K,EAIzB,OAHAA,EAAe9K,EACfxC,GAAOI,GAECuN,GACN,KAAK,EACH3O,EAAOyE,MAAM,CAACyL,GAAKtH,UACnB,MACF,KAAK,EACH5I,EAAOyE,MAAM,CACX,CAAC6E,EAAQsG,EAAQ7H,GACjBwH,EACAP,EACAM,EACAD,EACA,CAACY,EAAWE,GAAWC,GAAcC,GAAcC,MAErD,MACF,QACE,MAGJ2C,sBAAsBD,IAGxBC,sBAAsBD,ICjiCxB,QACE9W,KAAM,MACNpC,KAAM,WAAR,OACA,eAEEoZ,QALF,WAMI/E,OCf0T,M,yBCQ1TgF,GAAY,gBACd,GACA,EACAjV,GACA,EACA,KACA,KACA,MAIa,GAAAiV,G,QChBfC,OAAI5S,OAAO6S,eAAgB,EAE3B,IAAID,OAAI,CACNpT,OAAQ,SAAAsT,GAAC,OAAIA,EAAEC,OACdC,OAAO,S,uBCPV3X,EAAOD,QAAU,IAA0B,iC,uBCA3CC,EAAOD,QAAU,IAA0B,4B,qBCA3CC,EAAOD,QAAU,IAA0B,mC,qBCA3CC,EAAOD,QAAU,IAA0B,kC,uBCA3CC,EAAOD,QAAU,IAA0B,oC,gDCA3CC,EAAOD,QAAU,IAA0B,8B,uBCA3CC,EAAOD,QAAU,IAA0B,+B,uBCA3CC,EAAOD,QAAU,IAA0B,oC,qBCA3CC,EAAOD,QAAU,IAA0B,iC,qBCA3CC,EAAOD,QAAU,IAA0B,oC,qBCA3CC,EAAOD,QAAU,IAA0B","file":"js/app.5208ebc1.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","module.exports = __webpack_public_path__ + \"media/explosion.2a1f123e.wav\";","module.exports = __webpack_public_path__ + \"img/space-ship.42a79290.gif\";","module.exports = __webpack_public_path__ + \"img/background.75a24039.png\";","module.exports = __webpack_public_path__ + \"media/lost-times.cedbd035.mp3\";","module.exports = __webpack_public_path__ + \"img/nova-c-yellow-1.dd327f79.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('canvas',{attrs:{\"id\":\"canvas-id\",\"width\":\"1024\",\"height\":\"1024\"}})])}]\n\nexport { render, staticRenderFns }","// Takes a 2d array each is a layer\r\n\r\nexport default class Render {\r\n  \r\n  constructor (context, canvas, cameras, background, hud) {\r\n    this.context = context\r\n    this.canvas = canvas\r\n    this.cameras = cameras\r\n    this.aciteCamera = 0\r\n    this.background = background ? background : 'rgba(0, 0, 0, 1)'\r\n    this.hud = []\r\n    if (hud) {\r\n      this.hud = hud\r\n    }\r\n\r\n    this.backgroundImage = new Image();\r\n    this.backgroundImage.addEventListener('load', function() {\r\n      console.log('background image loaded')\r\n    });\r\n    this.backgroundImage.src = require('../assets/background.png')\r\n\r\n  }\r\n\r\n  frame (r) {\r\n    // this.canvas.cssText = `width: ${window.innerWidth}; height: ${window.innerWidth}`;\r\n    \r\n    this.canvas.style.background = this.background\r\n\r\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    this.context.drawImage(\r\n      this.backgroundImage, // image\r\n      420, // Crop top x\r\n      0, // Crop top y\r\n      1080, // Crop width\r\n      1080, // Crop heigth\r\n      0, // top left x\r\n      0, // top left y\r\n      1024, // Width on canvas\r\n      1024\r\n    )\r\n\r\n    this.context.save();\r\n    this.context.translate(this.cameras[this.aciteCamera].pos.x,\r\n      this.cameras[this.aciteCamera].pos.y);\r\n    this.context.rotate(this.cameras[this.aciteCamera].rotation)\r\n    this.context.scale(\r\n      this.cameras[this.aciteCamera].scale.x,\r\n      this.cameras[this.aciteCamera].scale.y);\r\n    for (let i = 0; i < r.length; i++) {\r\n      const layer = r[i];\r\n      for (let l = 0; l < layer.length; l++) {\r\n        const object = layer[l];\r\n        if (object) {\r\n          object.render(this.context);\r\n        }\r\n      }\r\n    }\r\n    this.context.restore();\r\n    for (let i = 0; i < this.hud.length; i++) {\r\n      this.hud[i].render(this.context);\r\n    }\r\n  }\r\n  \r\n  loading (progress) {\r\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.context.fillStyle = 'rgba(0, 150, 130, 1)';\r\n    let width = this.canvas.width * progress;\r\n    let height = this.canvas.height * progress;\r\n    let x = (this.canvas.width / 2) - (width / 2);\r\n    let y = (this.canvas.height / 2) - (height / 2);\r\n    this.context.fillRect(x, y, width, height);\r\n  }\r\n}","export default class Vector2 {\r\n  constructor (x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  add(vector) {\r\n    this.x += vector.x\r\n    this.y += vector.y\r\n  }\r\n\r\n  // get y() {\r\n  //   return x\r\n  // }\r\n}","import Vector2 from './vector2';\r\n\r\nexport default class Object2d {\r\n  constructor (config) {\r\n    this.name = config.name ? config.name : 'random_name';\r\n    this.width = config.width ? config.width : 0;\r\n    this.height = config.height ? config.height : 0;\r\n    this.pos = config.pos ? \r\n      new Vector2(config.pos.x, config.pos.y) : \r\n      new Vector2(0, 0);\r\n    this.scale = config.scale ? \r\n      new Vector2(config.scale.x, config.scale.y) : \r\n      new Vector2(0, 0);\r\n    this.rotation = config.rotation ? config.rotation : 0;\r\n    this.physicsVector = config.physicsVector ? config.physicsVector : new Vector2(0, 0);\r\n    this.physicsInertia = config.physicsInertia ? config.physicsInertia : new Vector2(0, 0);\r\n    this.hide = config.hide ? config.hide : false;\r\n\r\n    this.input = config.input ? config.input : undefined;\r\n    \r\n    this.events = config.events ? config.events : undefined;\r\n\r\n    let updateFns = [];\r\n    if (config.update) {\r\n      config.update.map(e => {\r\n        updateFns.push(e.bind(this));\r\n      })\r\n    }\r\n    this.updateFns = updateFns;\r\n  }\r\n\r\n  getPos() {\r\n    return this.pos\r\n  }\r\n\r\n  addToUpdate(fun) {\r\n    this.updateFns.push(fun.bind(this));\r\n  }\r\n\r\n  update(elapsedTime, input) {\r\n    this.updateFns.map(e => {\r\n      e(elapsedTime, input)\r\n    })\r\n  }\r\n\r\n  rotate(radians) {\r\n    this.rotation += radians;\r\n  }\r\n\r\n  render(context) {\r\n\r\n  }\r\n}","import Vector2 from './vector2';\r\nimport Object2d from './object2d';\r\n\r\nexport default class Camera2d extends Object2d {\r\n  constructor (config) {\r\n    super(config)\r\n    \r\n    this.followDist = config.followDist ?\r\n      new Vector2(config.followDist.x, config.followDist.y) :\r\n      new Vector2(0, 0);\r\n  }\r\n\r\n  followObject (object) {\r\n    let follow = function(elapsedTime) {\r\n      // if (Math.abs(object.pos.x - this.pos.x) > this.followDist.x) {\r\n      //   this.pos.x += object.pos.x - this.pos.x;\r\n      // }\r\n      // if (object.pos.y - this.pos.y > this.followDist.y) {\r\n        // this.pos.y -= 1;\r\n      // }\r\n      this.pos.x = -object.getPos().x * this.scale.x + 400\r\n      this.pos.y = -object.getPos().y * this.scale.y + 400\r\n    }\r\n\r\n    this.addToUpdate(follow)\r\n  }\r\n\r\n}","export default class Input {\r\n  constructor(canvas) {\r\n    this.keys = []\r\n    this.keyPress = []\r\n    this.mouseLocation = {x: 0, y: 0}\r\n    this.mouseClick\r\n    \r\n    window.addEventListener('keydown', (e) => {\r\n      this.keys[e.key] = e.timeStamp;\r\n      this.keyPress[e.key] = e.timeStamp;\r\n    });\r\n    window.addEventListener('keyup', (e) => {\r\n      delete this.keys[e.key];\r\n    });\r\n\r\n    canvas.addEventListener('mousedown', (e) => {\r\n      this.mouseClick = true\r\n    });\r\n    // canvas.addEventListener('mouseup', mouseUp);\r\n    canvas.addEventListener('mousemove', (e) => {\r\n      this.mouseLocation.x = (e.clientX - canvas.offsetLeft) * (canvas.width / canvas.offsetWidth)\r\n      this.mouseLocation.y = (e.clientY - canvas.offsetTop) * (canvas.height / canvas.offsetHeight)\r\n      // this.mouseLocation = e\r\n    });\r\n  }\r\n\r\n  clear() {\r\n    this.keyPress = []\r\n    this.mouseClick = false\r\n  }\r\n}\r\n\r\n","import Object2d from './object2d'\r\n\r\nexport default class Text extends Object2d {\r\n\r\n  constructor(config) {\r\n    super(config)\r\n    this.font = config.font ? config.font : '12px Arial';\r\n    this.text = config.text ? config.text : 'text';\r\n    this.fillStyle = config.fillStyle ? config.fillStyle : 'gray';\r\n    this.textAlign = config.textAlign ? config.textAlign : 'left';\r\n    this.hide = config.hide ? config.hide : false;\r\n  }\r\n  \r\n  render (context) {\r\n    if (!this.hide) {\r\n      context.save();\r\n      context.translate(this.pos.x, this.pos.y);\r\n      context.rotate(this.rotation);\r\n      context.translate(-this.pos.x, -this.pos.y);\r\n      context.fillStyle = this.fillStyle\r\n      context.font = this.font\r\n      context.fillText(this.text, this.pos.x, this.pos.y); \r\n      context.restore();\r\n    }\r\n  }\r\n}","export const randInt = function(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nexport const randIntRange = function (min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport const randPosNeg = function () {\r\n  if (Math.random() > 0.5) {\r\n    return Math.random();\r\n  } else {\r\n    return Math.random() * -1;\r\n  }\r\n}\r\n\r\nexport const randRange = function (min, max) {\r\n  let rand = Math.random() * (max - min)\r\n  return min + rand\r\n}\r\n\r\nexport default {\r\n  randInt,\r\n  randIntRange,\r\n  randPosNeg,\r\n  randRange\r\n}","export default class Stopwatch {\r\n  constructor() {\r\n    this.time = 0\r\n    this.seconds = 0\r\n    this.paused = false\r\n  }\r\n\r\n  update (elapsedTime) {\r\n    if(!this.paused) {\r\n      this.time += elapsedTime\r\n\r\n      this.seconds = (this.time / 1000).toFixed(2)\r\n    }\r\n  }\r\n}","import Object2d from './object2d'\r\nimport { randInt } from '../utils/random'\r\n\r\nexport default class Texture2d extends Object2d {\r\n\r\n  constructor(config) {\r\n    super(config)\r\n    this.speed = config.speed ? config.speed : 0;\r\n    this.rotationRate = config.rotationRate ? config.rotationRate : 2 * Math.PI / 10000;\r\n    this.fillStyle = config.fillStyle ? config.fillStyle : 'rgba(0, 0, 255, 1)';\r\n    this.strokeStyle = config.strokeStyle ? config.strokeStyle : 'rgb(0, 0, 0)';\r\n    this.orientation = config.orintation ? config.orientation : 0;\r\n    this.ss = config.ss ? config.ss : {};\r\n    if (config.randomState) {\r\n      this.state = config.state ?\r\n      this.ss[config.state][randInt(this.ss[config.state].length)] : \r\n      this.ss[Object.keys(this.ss)[0]];\r\n    } else {\r\n      this.state = config.state ?\r\n        this.ss[config.state][0] : \r\n        this.ss[Object.keys(this.ss)[0]];\r\n    }\r\n    this.currentState = config.state ? config.state : Object.keys(this.ss)[0]\r\n    this.image = config.image ? config.image : undefined;\r\n    this.collisionShow = config.collisionShow ?\r\n      config.collisionShow : false\r\n  }\r\n\r\n  setState(state, frame) {\r\n    this.state = this.ss[state][0]\r\n    this.currentState = state\r\n  }\r\n\r\n  render (context) {\r\n    context.save();\r\n    context.translate(this.pos.x, this.pos.y);\r\n    context.rotate(this.rotation);\r\n    context.translate(-this.pos.x, -this.pos.y);\r\n    if (!this.hide) {\r\n      context.drawImage(\r\n        this.image, // image\r\n        this.state.x, // Crop top x\r\n        this.state.y, // Crop top y\r\n        this.state.width, // Crop width\r\n        this.state.height, // Crop heigth\r\n        this.pos.x - (this.width / 2), // top left x\r\n        this.pos.y - (this.height / 2), // top left y\r\n        this.width, // Width on canvas\r\n        this.height // Height on canvas\r\n        );\r\n\r\n    }\r\n    \r\n    // if (this.collisionObjects !== undefined ) {\r\n    if (false) {\r\n      // if (this.collisionShow) {\r\n      if (this.collisionType === 'square') {\r\n        for (let i = 0; i < this.collisionObjects.length; i++) {\r\n          const el = this.collisionObjects[i];\r\n          \r\n          context.fillStyle = 'rgba(0, 0, 255, 0.3)';\r\n          context.fillRect(\r\n            (el.collisionCenter.x - el.collisionDim.x / 2) + this.pos.x,\r\n            (el.collisionCenter.y - el.collisionDim.y / 2)  + this.pos.y,\r\n            el.collisionDim.x,\r\n            el.collisionDim.y\r\n            );\r\n          }\r\n      } else if (this.collisionType === 'circle') {\r\n        let rad = this.collisionObjects[0].collisionRad\r\n        let colX = this.collisionObjects[0].collisionCenter.x\r\n        let colY = this.collisionObjects[0].collisionCenter.y\r\n        context.fillStyle = 'rgba(0, 0, 255, 0.3)';\r\n        context.beginPath();\r\n        context.arc(this.pos.x + colX, this.pos.y + colY, rad, 0, 2 * Math.PI);\r\n        context.stroke();\r\n      }\r\n    }\r\n\r\n    context.restore();\r\n    // context.save();\r\n    // if (this.path) {\r\n    //   for (let i = 0; i < this.path.length; i++) {\r\n    //     let p = this.path[i]\r\n    //     context.beginPath();\r\n    //     context.arc(p.p0.x, p.p0.y, 10, 0, 2 * Math.PI, false);\r\n    //     context.fillStyle = 'green';\r\n    //     context.fill();\r\n    //     context.closePath();\r\n\r\n    //     context.beginPath();\r\n    //     context.arc(p.p1.x, p.p1.y, 10, 0, 2 * Math.PI, false);\r\n    //     context.fillStyle = 'yellow';\r\n    //     context.fill();\r\n    //     context.closePath();\r\n        \r\n    //     context.beginPath();\r\n    //     context.arc(p.p2.x, p.p2.y, 10, 0, 2 * Math.PI, false);\r\n    //     context.fillStyle = 'purple';\r\n    //     context.fill();\r\n    //     context.closePath();\r\n        \r\n    //     context.beginPath();\r\n    //     context.arc(p.p3.x, p.p3.y, 10, 0, 2 * Math.PI, false);\r\n    //     context.fillStyle = 'pink';\r\n    //     context.fill();\r\n    //     context.closePath();\r\n        \r\n    //   }\r\n    // }\r\n    // context.restore();\r\n  }\r\n  \r\n}","import Texture2d from './texture2d';\r\n\r\nexport default class Player2d extends Texture2d {\r\n  constructor (config) {\r\n    super(config)\r\n    // this.moveUp = config.update.moveUp.bind(this)\r\n    // this.moveDown = config.update.moveDown.bind(this)\r\n    this.box = config.box ? config.box : undefined;\r\n    \r\n  }\r\n\r\n}","import Player2d from './player2d'\r\nimport Vector2 from './vector2';\r\n\r\nexport default class CollisionBodySquare extends Player2d {\r\n  constructor (config) {\r\n    super(config)\r\n    // this.moveUp = config.update.moveUp.bind(this)\r\n    // this.moveDown = config.update.moveDown.bind(this)\r\n    this.box = config.box ? config.box : undefined;\r\n    this.collisionType = 'square'\r\n    \r\n\r\n    this.collisionObjects = [...config.collisionObjects]\r\n\r\n    // this.collisionCenter = new Vector2(\r\n    //   config.collisionCenter.x ? config.collisionCenter.x : 0,\r\n    //   config.collisionCenter.y ? config.collisionCenter.y : 0\r\n    // )\r\n    // this.collisionDim = new Vector2(\r\n    //   config.collisionDim.x ? config.collisionDim.x : 0,\r\n    //   config.collisionDim.y ? config.collisionDim.y : 0\r\n    // )\r\n    this.collisionChecks = []\r\n    this.hasCollided = false\r\n    \r\n    if (config.collisionChecks) {\r\n      this.collisionChecks = [...config.collisionChecks]\r\n    }\r\n    this.hasBeenVisited = false\r\n  }\r\n\r\n  checkCollision () {\r\n    this.hasCollided = false\r\n    const pos = this.pos;\r\n    const center = this.collisionObjects[0].collisionCenter;\r\n    const dim = this.collisionObjects[0].collisionDim;\r\n\r\n    let x = pos.x + center.x\r\n    let y = pos.y + center.y\r\n\r\n    let xdim = dim.x / 2\r\n    let ydim = dim.y / 2\r\n\r\n    let collision = false\r\n\r\n    for (let i = 0; i < this.collisionChecks.length; i++) {\r\n      const element = this.collisionChecks[i];\r\n      for (let j = 0; j < element.collisionObjects.length; j++) {\r\n        const el = element.collisionObjects[j];\r\n\r\n        let obX = el.collisionCenter.x + element.pos.x\r\n        let obY = el.collisionCenter.y + element.pos.y\r\n\r\n        let obXdim = el.collisionDim.x / 2\r\n        let obYdim = el.collisionDim.y / 2\r\n\r\n        if (x + xdim > obX - obXdim\r\n          && y + ydim > obY - obYdim\r\n          && x - xdim < obX + obXdim\r\n          && y - ydim < obY + obYdim) {\r\n            collision = true\r\n        }\r\n        \r\n      }\r\n    }\r\n\r\n    return collision\r\n  }\r\n\r\n}","export const storeGlobals = function ()  {\r\n  localStorage.setItem('globals',\r\n    JSON.stringify(globals)\r\n  )\r\n}\r\n\r\nexport const getGlobals= function () {\r\n  if (localStorage.getItem('globals')) {\r\n    globals = JSON.parse(localStorage.getItem('globals'))\r\n  } else {\r\n    localStorage.setItem('globals',\r\n      JSON.stringify(globals)\r\n    )\r\n  }\r\n}\r\n\r\nexport let globals = {\r\n  score: 0,\r\n  up: 'ArrowUp',\r\n  down: 'ArrowDown',\r\n  left: 'ArrowLeft',\r\n  right: 'ArrowRight',\r\n  fire: ' ',\r\n  highScores: []\r\n}\r\n\r\nfunction sound(src, start) {\r\n  this.sound = document.createElement(\"audio\");\r\n  this.sound.src = src;\r\n  this.sound.setAttribute(\"preload\", \"auto\");\r\n  this.sound.setAttribute(\"controls\", \"none\");\r\n  this.sound.style.display = \"none\";\r\n  document.body.appendChild(this.sound);\r\n  this.play = function(){\r\n    this.sound.currentTime = start\r\n    this.sound.play();\r\n  }\r\n  this.stop = function(){\r\n    this.sound.pause();\r\n  }\r\n} \r\n\r\nexport const sounds = {\r\n  music1: new sound(require('../assets/music/storm.mp3'), 0),\r\n  music2: new sound(require('../assets/music/level-up.mp3'), 0),\r\n  laser: new sound(require('../assets/music/laser-shot.wav'), 0.3),\r\n  explosion: new sound(require('../assets/music/explosion.wav'), 0),\r\n  music3: new sound(require('../assets/music/lost-times.mp3'), 0)\r\n}\r\n\r\nconst fireImage = new Image();\r\nfireImage.addEventListener('load', function() {\r\n  console.log('fire image loaded')\r\n});\r\nfireImage.src = require('../assets/explosion.png');\r\n\r\nconst novaAblue1 = new Image();\r\nnovaAblue1.src = require('../assets/Spaceships-nova/nova-a-blue-1.png')\r\n\r\nconst novaAred1 = new Image();\r\nnovaAred1.src = require('../assets/Spaceships-nova/nova-a-red-1.png')\r\n\r\nconst novaCyellow1 = new Image();\r\nnovaCyellow1.src = require('../assets/Spaceships-nova/nova-c-yellow-1.png')\r\n\r\nconst novaApurple4 = new Image();\r\nnovaApurple4.src = require('../assets/Spaceships-nova/nova-a-purple-4.png')\r\n\r\nconst novaBgreen4 = new Image();\r\nnovaBgreen4.src = require('../assets/Spaceships-nova/nova-b-green-4.png')\r\n\r\nconst novaBorange4 = new Image();\r\nnovaBorange4.src = require('../assets/Spaceships-nova/nova-b-orange-4.png')\r\n\r\nconst novaCred3 = new Image();\r\nnovaCred3.src = require('../assets/Spaceships-nova/nova-c-red-3.png')\r\n\r\nconst novaCpurple4 = new Image();\r\nnovaCpurple4.src = require('../assets/Spaceships-nova/nova-c-purple-4.png')\r\n\r\nexport let Images = {\r\n  fireImage,\r\n  novaAblue1,\r\n  novaAred1,\r\n  novaCyellow1,\r\n  novaApurple4,\r\n  novaBgreen4,\r\n  novaBorange4,\r\n  novaCred3,\r\n  novaCpurple4\r\n}","import Text from '../engine/objects/text'\r\n\r\nimport { globals, storeGlobals, getGlobals } from './globals'\r\n\r\nexport default function () {\r\n  let that = {\r\n    renders: [],\r\n    play: false\r\n  }\r\n\r\n  // let selectState = 1\r\n  let menuState = 'main'\r\n\r\n  let name = new Text({\r\n    text: 'Galaga',\r\n    font: '100px spaceAge',\r\n    fillStyle: 'white',\r\n    pos: {x: 100, y: 100},\r\n  })\r\n\r\n  let play = new Text({\r\n    text: 'Play',\r\n    font: '100px spaceAge',\r\n    fillStyle: 'white',\r\n    pos: {x: 100, y: 500},\r\n  })\r\n\r\n  let changeInput = new Text({\r\n    text: 'Change Input',\r\n    font: '100px spaceAge',\r\n    fillStyle: 'gray',\r\n    pos: {x: 100, y: 600},\r\n  })\r\n\r\n  let credits = new Text({\r\n    text: 'Credits',\r\n    font: '100px spaceAge',\r\n    fillStyle: 'gray',\r\n    pos: {x: 100, y: 700},\r\n  })\r\n\r\n  let highScore = new Text({\r\n    text: 'High Scores',\r\n    font: '100px spaceAge',\r\n    fillStyle: 'gray',\r\n    pos: {x: 100, y: 800},\r\n  })\r\n  \r\n  let creditsContent = new Text({\r\n    text: 'Made by Jacob Strong',\r\n    font: '40px spaceAge',\r\n    fillStyle: 'white',\r\n    pos: {x: 100, y: 600},\r\n  })\r\n\r\n  let instructions = new Text({\r\n    text: 'Click on action, then press new key',\r\n    font: '45px spaceAge',\r\n    fillStyle: 'white',\r\n    pos: {x: 100, y: 250},\r\n  })\r\n\r\n  let back = new Text({\r\n    text: 'back',\r\n    font: '100px spaceAge',\r\n    fillStyle: 'gray',\r\n    pos: {x: 100, y: 900},\r\n  })\r\n\r\n  let pitchLeft = new Text({\r\n    text: 'Move Left: ' + globals.left,\r\n    font: '70px spaceAge',\r\n    fillStyle: 'gray',\r\n    pos: {x: 100, y: 400},\r\n  })\r\n  \r\n  let pitchRight = new Text({\r\n    text: 'Move Right: ' + globals.right,\r\n    font: '70px spaceAge',\r\n    fillStyle: 'gray',\r\n    pos: {x: 100, y: 500},\r\n  })\r\n  \r\n  let thrust = new Text({\r\n    text: 'Fire: ' + (globals.fire === ' ' ? ' Space' : globals.fire),\r\n    font: '70px spaceAge',\r\n    fillStyle: 'gray',\r\n    pos: {x: 100, y: 600},\r\n  })\r\n  \r\n  let highScoreContent = new Text({\r\n    text: 'High Scores',\r\n    font: '70px spaceAge',\r\n    fillStyle: 'white',\r\n    pos: {x: 100, y: 300},\r\n  })\r\n\r\n  let waitingText = new Text({\r\n    text: 'Waiting For Input',\r\n    font: '80px spaceAge',\r\n    fillStyle: 'white',\r\n    pos: {x: 100, y: 700},\r\n    hide: true\r\n  })\r\n\r\n  let highScores = []\r\n  \r\n  function updateHighScores() {\r\n    highScores = []\r\n    for (let i = 0; i < globals.highScores.length; i++) {\r\n      if (i > 9) return\r\n      highScores.push(\r\n        new Text({\r\n          text: String(i + 1) + ': ' + globals.highScores[i],\r\n          font: '50px spaceAge',\r\n          fillStyle: 'gray',\r\n          pos: {x: 100, y: 400 + (i * 50)},\r\n        })\r\n      )\r\n    }\r\n  }\r\n  updateHighScores()\r\n\r\n  function getRenders() {\r\n    that.renders.length = 0\r\n    that.renders.push(name)\r\n    switch (menuState) {\r\n      case 'main':\r\n        that.renders.push(play)\r\n        that.renders.push(changeInput)\r\n        that.renders.push(credits)\r\n        that.renders.push(highScore)\r\n        break;\r\n      case 'credits':\r\n        that.renders.push(creditsContent)\r\n        that.renders.push(back)\r\n        break;\r\n      case 'change':\r\n        that.renders.push(instructions)\r\n        that.renders.push(pitchLeft)\r\n        that.renders.push(pitchRight)\r\n        that.renders.push(thrust)\r\n        that.renders.push(waitingText)\r\n        that.renders.push(back)\r\n        break;\r\n      case 'high':\r\n        that.renders.push(highScoreContent)\r\n        that.renders.push(back)\r\n        highScores.forEach(el => {\r\n          that.renders.push(el)\r\n        });\r\n      default:\r\n        break;\r\n    }\r\n    return that.renders\r\n  }\r\n\r\n  function changeToPlay() {\r\n    // selectState = 1\r\n    play.fillStyle = 'white'\r\n    credits.fillStyle = 'gray'\r\n  }\r\n\r\n  function changeToCredits() {\r\n    // selectState = 2\r\n    play.fillStyle = 'gray'\r\n    credits.fillStyle = 'white'\r\n  }\r\n\r\n  function changeToCredits() {\r\n    // selectState = 2\r\n    play.fillStyle = 'gray'\r\n    credits.fillStyle = 'white'\r\n  }\r\n\r\n  function isOverPlay(mouseLocation) {\r\n    return checkOverlay(mouseLocation, play.pos.y)\r\n  }\r\n\r\n  function isOverCredits(mouseLocation) {\r\n    return checkOverlay(mouseLocation, credits.pos.y)\r\n  }\r\n\r\n  function isOverChange(mouseLocation) {\r\n    return checkOverlay(mouseLocation, changeInput.pos.y)\r\n  }\r\n\r\n  function isOverHigh(mouseLocation) {\r\n    return checkOverlay(mouseLocation, highScore.pos.y)\r\n  }\r\n\r\n  function isOverBack(mouseLocation) {\r\n    return checkOverlay(mouseLocation, back.pos.y)\r\n  }\r\n\r\n  function isOverPitchLeft(mouseLocation) {\r\n    return checkOverlay(mouseLocation, pitchLeft.pos.y)\r\n  }\r\n  function isOverPitchRight(mouseLocation) {\r\n    return checkOverlay(mouseLocation, pitchRight.pos.y)\r\n  }\r\n  function isOverThrust(mouseLocation) {\r\n    return checkOverlay(mouseLocation, thrust.pos.y)\r\n  }\r\n\r\n  function updateKeyText() {\r\n    pitchLeft.text = 'Pitch Left: ' + globals.left\r\n    pitchRight.text = 'Pitch Right: ' + globals.right\r\n    thrust.text = 'Fire: ' + (globals.fire === ' ' ? ' space' : globals.fire)\r\n  }\r\n\r\n  let waitForInput = false\r\n  let inputKey = ''\r\n\r\n  function checkOverlay(mouseLocation, y) {\r\n    if (mouseLocation.y >= y - 100 && mouseLocation.y <= y) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  that.update = function (input) {\r\n    getRenders()\r\n\r\n    if (waitForInput) {\r\n      // console.log(input.keyPress)\r\n      if(Object.keys(input.keyPress).length > 0) {\r\n        console.log(Object.keys(input.keyPress)[0])\r\n        globals[inputKey] = Object.keys(input.keyPress)[0]\r\n        storeGlobals()\r\n        waitForInput = false\r\n        waitingText.hide = true\r\n        updateKeyText()\r\n      }\r\n    }\r\n\r\n    if (isOverPlay(input.mouseLocation) && menuState === 'main') {\r\n      play.fillStyle = 'white'\r\n      changeInput.fillStyle = 'gray'\r\n      credits.fillStyle = 'gray'\r\n      highScore.fillStyle = 'gray'\r\n    } else if (isOverChange(input.mouseLocation) && menuState === 'main') {\r\n      play.fillStyle = 'gray'\r\n      changeInput.fillStyle = 'white'\r\n      credits.fillStyle = 'gray'\r\n      highScore.fillStyle = 'gray'\r\n    } else if (isOverCredits(input.mouseLocation) && menuState === 'main') {\r\n      play.fillStyle = 'gray'\r\n      changeInput.fillStyle = 'gray'\r\n      credits.fillStyle = 'white'\r\n      highScore.fillStyle = 'gray'\r\n    } else if (isOverHigh(input.mouseLocation) && menuState === 'main') {\r\n      play.fillStyle = 'gray'\r\n      changeInput.fillStyle = 'gray'\r\n      credits.fillStyle = 'gray'\r\n      highScore.fillStyle = 'white'\r\n    }\r\n\r\n    // if (menuState === 'credits') {\r\n    if (isOverBack(input.mouseLocation)) {\r\n      back.fillStyle = 'white'\r\n    } else {\r\n      back.fillStyle = 'gray'\r\n    }\r\n    // }\r\n    if (menuState === 'change') {\r\n      if (isOverPitchLeft(input.mouseLocation)) {\r\n        if (input.mouseClick) {\r\n          waitingText.hide = false\r\n          waitForInput = true\r\n          inputKey = 'left'\r\n        }\r\n        pitchLeft.fillStyle = 'white'\r\n        pitchRight.fillStyle = 'gray'\r\n        thrust.fillStyle = 'gray'\r\n      } else if (isOverPitchRight(input.mouseLocation)) {\r\n        if (input.mouseClick) {\r\n          waitingText.hide = false\r\n          waitForInput = true\r\n          inputKey = 'right'\r\n        }\r\n        pitchLeft.fillStyle = 'gray'\r\n        pitchRight.fillStyle = 'white'\r\n        thrust.fillStyle = 'gray'\r\n      } else if (isOverThrust(input.mouseLocation)) {\r\n        if (input.mouseClick) {\r\n          waitingText.hide = false\r\n          waitForInput = true\r\n          inputKey = 'fire'\r\n        }\r\n        pitchLeft.fillStyle = 'gray'\r\n        pitchRight.fillStyle = 'gray'\r\n        thrust.fillStyle = 'white'\r\n      }\r\n    }\r\n\r\n    if (input.mouseClick) {\r\n      if (isOverPlay(input.mouseLocation) && menuState === 'main') {\r\n        that.play = true\r\n      }\r\n      if (isOverCredits(input.mouseLocation) && menuState === 'main') {\r\n        menuState = 'credits'\r\n      }\r\n      if (isOverBack(input.mouseLocation) && (menuState === 'credits' || menuState === 'change' || menuState === 'high')) {\r\n        menuState = 'main'\r\n      }\r\n      if (isOverChange(input.mouseLocation) && menuState === 'main') {\r\n        menuState = 'change'\r\n      }\r\n      if (isOverHigh(input.mouseLocation) && menuState === 'main') {\r\n        menuState = 'high'\r\n        updateHighScores()\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    renders: that.renders,\r\n    update: that.update,\r\n    play: function () {return that.play},\r\n    reset: function () {that.play = false}\r\n  }\r\n}","export default class Timer {\r\n  constructor(config) {\r\n    this.config = config\r\n    this.time = config.time ? config.time : 10\r\n    this.seconds = 0\r\n    this.paused = true\r\n    this.eventFired = false\r\n    this.event = config.event\r\n  }\r\n\r\n  start (time) {\r\n    this.time = time\r\n    this.eventFired = false\r\n    this.paused = false\r\n  }\r\n\r\n  reset () {\r\n    this.eventFired = false\r\n    this.time = this.config.time ? this.config.time : 10\r\n  }\r\n\r\n  update (elapsedTime) {\r\n    if(!this.paused) {\r\n      this.time -= elapsedTime\r\n      this.seconds = Math.ceil(this.time / 1000)\r\n    }\r\n    if (this.time <= 0) {\r\n      if (!this.eventFired) {\r\n        if (this.event !== undefined) {\r\n          this.event()\r\n        }\r\n        this.eventFired = true\r\n      }\r\n      this.time = Math.abs(0)\r\n    }\r\n  }\r\n}","import Object2d from './object2d';\r\nimport Random, { ranPosNeg, randPosNeg } from '../utils/random'\r\n\r\nexport default class Particle {\r\n  constructor (config) {\r\n\r\n    this.particles = [];\r\n    this.events = [];\r\n\r\n    this.image = config.image ? config.image : undefined;\r\n    this.state = config.state ? config.state : undefined;\r\n\r\n    let updateFns = [];\r\n    if (config.update) {\r\n      config.update.map(e => {\r\n        updateFns.push(e.bind(this));\r\n      })\r\n    }\r\n    this.updateFns = updateFns;\r\n  }\r\n  \r\n  updateParticles (elapsedTime) {\r\n    let newParts = []\r\n    for (let i = 0; i < this.particles.length; i++) {\r\n      const el = this.particles[i];\r\n      el.x = el.x + el.xVel * elapsedTime * el.speed\r\n      el.y = el.y + el.yVel * elapsedTime * el.speed\r\n      el.rotation += el.rotationRate * elapsedTime\r\n      el.duration -= elapsedTime\r\n      if (el.duration > 0) {\r\n        newParts.push(el)\r\n      }\r\n    }\r\n    this.particles = newParts\r\n  }\r\n\r\n  update(elapsedTime, input) {\r\n    this.updateParticles(elapsedTime)\r\n    this.updateFns.map(e => {\r\n      e(elapsedTime, input)\r\n    })\r\n  }\r\n\r\n  explosion (x, y, inertia) {\r\n    for (let i = 0; i < 60; i++) {\r\n      let theta = Math.random() * 2 * Math.PI;\r\n      let speed = randPosNeg() * 0.5\r\n      this.particles.push({\r\n        x: x,\r\n        y: y,\r\n        width: 20,\r\n        height: 20,\r\n        rotationRate: randPosNeg() * 0.1,\r\n        rotation: 0,\r\n        speed: speed,\r\n        xVel: Math.cos(theta),\r\n        yVel: Math.sin(theta),\r\n        duration: Math.random() * 500\r\n      })\r\n    } \r\n  }\r\n\r\n  edges (x1, x2, y2) {\r\n\r\n    // bottom\r\n    for (let i = 0; i < 50; i++) {\r\n      let speed = Math.random() * 0.05\r\n      this.particles.push({\r\n        x: Random.randRange(x1, x2),\r\n        y: y2,\r\n        width: 20,\r\n        height: 20,\r\n        rotationRate: Random.randPosNeg() * 0.1,\r\n        rotation: 0,\r\n        speed: speed,\r\n        xVel: 0,\r\n        yVel: 1,\r\n        duration: Math.random() * 2000\r\n      })\r\n    }\r\n  }\r\n\r\n  thrust (x, y, rot) {\r\n    for (let i = 0; i < 10; i++) {\r\n      let theta = Math.random() * 2 * Math.PI;\r\n      let speed = Math.random() * 0.5\r\n      let xVel = Math.sin(-rot + randPosNeg() * 0.1)\r\n      let yVel = Math.cos(rot + randPosNeg() * 0.1)\r\n      let xOff = Math.sin(-rot)\r\n      let yOff = Math.cos(rot)\r\n      // let speed = randPosNeg() * 0.2\r\n      this.particles.push({\r\n        x: x + xOff * 40,\r\n        y: y + yOff * 40,\r\n        width: 10,\r\n        height: 10,\r\n        rotationRate: randPosNeg() * 0.1,\r\n        rotation: 0,\r\n        speed: speed,\r\n        xVel: xVel,\r\n        yVel: yVel,\r\n        duration: Math.random() * 500\r\n      })\r\n    } \r\n  }\r\n\r\n  render (context) {\r\n    for (let i = this.particles.length - 1; i >= 0; i--) {\r\n      const part = this.particles[i];\r\n      context.save();\r\n      context.translate(part.x, part.y);\r\n      context.rotate(part.rotation);\r\n      context.translate(-part.x, -part.y);\r\n\r\n      context.drawImage(\r\n        this.image, // image\r\n        this.state.x, // Crop top x\r\n        this.state.y, // Crop top y\r\n        this.state.width, // Crop width\r\n        this.state.height, // Crop heigth\r\n        part.x - (part.width / 2), // top left x\r\n        part.y - (part.height / 2), // top left y\r\n        part.width, // Width on canvas\r\n        part.height // Height on canvas\r\n        );\r\n\r\n      context.restore();\r\n    }\r\n\r\n  }\r\n}","import CollisionBodySquare from '../engine/objects/collisionBodySquare';\r\n\r\nimport { globals, Images } from './globals'\r\n\r\n// let canvas = document.getElementById('canvas-id');\r\n// const input = new Input(canvas);\r\n\r\nconst ss = new Image(); \r\nss.addEventListener('load', function() {\r\n  // console.log('space ship image loaded')\r\n});\r\nss.src = require('../assets/space-ship.gif');\r\n\r\nlet player = new CollisionBodySquare({\r\n  pos: {x: 512, y: 900},\r\n  width: 70,\r\n  height: 70,\r\n  fillStyle: 'rgba(0, 0, 255, 1)',\r\n  strokeStyle: 'rgb(0, 0, 0)',\r\n  speed: 0.3,\r\n  hide: false,\r\n  rotation: 1 * Math.PI,\r\n  collisionObjects: [\r\n    {\r\n      collisionCenter: {x: 0, y: 0},\r\n      collisionDim: {x: 70, y: 70},\r\n    }\r\n  ],\r\n  collisionShow: true,\r\n  image: Images.novaCyellow1,\r\n  ss: {\r\n    S: [\r\n      {\r\n        x: 0,\r\n        y: 0,\r\n        width: 106,\r\n        height: 111\r\n      },\r\n    ],\r\n  },\r\n  state: 'S',\r\n  events: {\r\n    // particles: (...args) => {\r\n    //   thrust.thrust(...args)\r\n    // }\r\n  },\r\n  update: [\r\n    function moveLeft (elapsedTime, input) {\r\n      if (input.keys.hasOwnProperty(globals.left)) {\r\n        if (this.pos.x > 128) {\r\n          this.pos.x -= this.speed * elapsedTime\r\n        }\r\n      }\r\n    },\r\n    function moveRight (elapsedTime, input) {\r\n      if (input.keys.hasOwnProperty(globals.right)) {\r\n        if (this.pos.x < 896) {\r\n          this.pos.x += this.speed * elapsedTime\r\n        }\r\n      }\r\n    },\r\n    function checkDie (elapsedTime, input) {\r\n      if (this.checkCollision()) {\r\n        if (!this.dead) {\r\n          this.events.playerDie(this.pos.x, this.pos.y)\r\n        }\r\n      }\r\n    }\r\n  ]\r\n})\r\n\r\nexport default player;","import CollisionBodySquare from '../engine/objects/collisionBodySquare'\r\n\r\nconst fireImage = new Image();\r\nfireImage.addEventListener('load', function() {\r\n  console.log('fire image loaded')\r\n});\r\nfireImage.src = require('../assets/explosion.png');\r\n\r\nexport default function (pos) {\r\n  return new CollisionBodySquare({\r\n    pos,\r\n    width: 15,\r\n    height: 15,\r\n    fillStyle: 'rgba(0, 0, 255, 1)',\r\n    strokeStyle: 'rgb(0, 0, 0)',\r\n    speed: 0.9,\r\n    hide: false,\r\n    collisionObjects: [\r\n      {\r\n        collisionCenter: {x: 0, y: 0},\r\n        collisionDim: {x: 15, y: 15},\r\n      }\r\n    ],\r\n    collisionShow: true,\r\n    image: fireImage,\r\n    ss: {\r\n      S: [\r\n        {\r\n          x: 775,\r\n          y: 775,\r\n          width: 450,\r\n          height: 450\r\n        },\r\n      ],\r\n    },\r\n    state: 'S',\r\n    events: {\r\n      // particles: (...args) => {\r\n      //   thrust.thrust(...args)\r\n      // }\r\n    },\r\n    update: [\r\n      function kill (elapsedTime, input) {\r\n        this.pos.y -= this.speed * elapsedTime\r\n        this.time -= elapsedTime\r\n      },\r\n      function collision (elapsedTime, input) {\r\n        if (this.checkCollision()) {\r\n          this.dead = true\r\n        }\r\n      }\r\n    ]\r\n  });\r\n}","import CollisionBodySquare from '../engine/objects/collisionBodySquare';\r\n\r\nimport { globals, Images } from './globals'\r\n\r\n// let canvas = document.getElementById('canvas-id');\r\n// const input = new Input(canvas);\r\n\r\nexport default function BadGuyTemp (image, state, pos) {\r\n  return new CollisionBodySquare({\r\n    pos,\r\n    width: 70,\r\n    height: 70,\r\n    fillStyle: 'rgba(0, 0, 255, 1)',\r\n    strokeStyle: 'rgb(0, 0, 0)',\r\n    speed: 0.01,\r\n    hide: false,\r\n    rotation: 0,\r\n    collisionObjects: [\r\n      {\r\n        collisionCenter: {x: 0, y: 0},\r\n        collisionDim: {x: 70, y: 70},\r\n      }\r\n    ],\r\n    collisionShow: true,\r\n    image,\r\n    ss: {\r\n      S: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n          width: 111,\r\n          height: 106\r\n        },\r\n      ],\r\n      T: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n          width: 111,\r\n          height: 95\r\n        },\r\n      ],\r\n      R: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n          width: 110,\r\n          height: 171\r\n        },\r\n      ],\r\n    },\r\n    state,\r\n    events: {\r\n      // particles: (...args) => {\r\n      //   thrust.thrust(...args)\r\n      // }\r\n    },\r\n    update: [\r\n      function move (elapsedTime, input) {\r\n        if (this.path) {\r\n          let i = this.pathIndex\r\n          let at = 1 - this.t;\r\n          let green1x = this.path[i].p0.x * this.t + this.path[i].p1.x * at;\r\n          let green1y = this.path[i].p0.y * this.t + this.path[i].p1.y * at;\r\n          let green2x = this.path[i].p1.x * this.t + this.path[i].p2.x * at;\r\n          let green2y = this.path[i].p1.y * this.t + this.path[i].p2.y * at;\r\n          let green3x = this.path[i].p2.x * this.t + this.path[i].p3.x * at;\r\n          let green3y = this.path[i].p2.y * this.t + this.path[i].p3.y * at;\r\n          let blue1x = green1x * this.t + green2x * at;\r\n          let blue1y = green1y * this.t + green2y * at;\r\n          let blue2x = green2x * this.t + green3x * at;\r\n          let blue2y = green2y * this.t + green3y * at;\r\n          let finalx = blue1x * this.t + blue2x * at;\r\n          let finaly = blue1y * this.t + blue2y * at;\r\n\r\n          this.rotation = Math.atan2(finaly - this.pos.y, finalx - this.pos.x)\r\n           - (0.5 * Math.PI);\r\n\r\n          this.pos.x = finalx\r\n          this.pos.y = finaly\r\n\r\n          this.t += this.path[i].speed;\r\n          // if (this.t > 1 || this.t < 0) this.speed *= -1;\r\n          if (this.t > 1) {\r\n            this.t = 0\r\n            if (this.path.length === this.pathIndex + 1) {\r\n              // this.pathIndex = 0\r\n              this.path = null\r\n              this.rotation = 0\r\n            } else {\r\n              this.pathIndex++\r\n            }\r\n          };\r\n        } else {\r\n          this.pos.x = this.originalPos.x + this.holdingOffset.x\r\n          this.pos.y = this.originalPos.y + this.holdingOffset.y\r\n          this.shoot = true\r\n          this.home = true\r\n        }\r\n      },\r\n      function shoot (elapsedTime, input) {\r\n        let rand = Math.random()\r\n        if (this.shoot && (rand > 0.999)) {\r\n          this.events.shoot(this.pos)\r\n        }\r\n      },\r\n      function checkDie (elapsedTime, input) {\r\n        if (this.checkCollision()) {\r\n          if (!this.lives) {\r\n            this.dead = true\r\n            this.events.explosion(this.pos.x, this.pos.y)\r\n            if (this.path) {\r\n              this.events.score(this.score * 2)\r\n            } else {\r\n              this.events.score(this.score)\r\n            }\r\n          } else {\r\n            this.lives = 0\r\n            this.image = Images.novaCpurple4\r\n          }\r\n        }\r\n        if (this.checkGone) {\r\n          if (this.pos.x > 1100 || this.pos.x < -100) {\r\n            this.dead = true\r\n          }\r\n          if (this.pos.y > 1100 || this.pos.y < -100) {\r\n            this.dead = true\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  })\r\n}","import Render from '../engine/render'\r\nimport Camera2d from '../engine/objects/camera2d'\r\nimport Input from '../engine/input'\r\nimport Text from '../engine/objects/text'\r\nimport Random, { randPosNeg } from '../engine/utils/random'\r\nimport Stopwatch from '../engine/objects/stopwatch'\r\n// import CollisionBodyCircle from '../engine/objects/collisionBodyCircle'\r\nimport CollisionBodySquare from '../engine/objects/collisionBodySquare'\r\n\r\n// import Player from './player'\r\nimport Line2d from '../engine/objects/line2d'\r\nimport Vector2 from '../engine/objects/vector2'\r\n\r\nimport GenerateLevel from './generateLevel'\r\nimport Menu from './menu'\r\nimport Timer from '../engine/objects/timer'\r\nimport Particle from '../engine/objects/particle'\r\n\r\nimport { Images, sounds, globals, storeGlobals, getGlobals } from './globals'\r\n\r\nimport Player from './player'\r\nimport Shot from './shotTemp'\r\nimport BadGuyTemp from './badGuyTemp'\r\nimport player from './player'\r\n\r\nexport default function game() {\r\n  let canvas = document.getElementById('canvas-id');\r\n  let context = canvas.getContext('2d');\r\n\r\n  let previousTime = performance.now();\r\n  \r\n  context.imageSmoothingEnabled = false;\r\n\r\n  getGlobals()\r\n\r\n  let input = new Input(canvas);\r\n\r\n  let cam1 = new Camera2d({\r\n    scale: {\r\n      // x: 0.495,\r\n      // y: 0.495\r\n      x: 1,\r\n      y: 1\r\n    },\r\n    pos: {\r\n      x: 0,\r\n      y: 0,\r\n    },\r\n    rotation: 0,\r\n    input: input,\r\n    followDist: {x: 1, y: 1},\r\n    update: []\r\n  });\r\n\r\n  const stopwatch = new Stopwatch()\r\n\r\n  let render = new Render(context, canvas, [cam1], 'rgba(154, 206, 235, 1)');\r\n\r\n\r\n  const fireImage = new Image();\r\n  fireImage.addEventListener('load', function() {\r\n    console.log('fire image loaded')\r\n  });\r\n  fireImage.src = require('../assets/explosion.png');\r\n\r\n  const explosion = new Particle ({\r\n    image: fireImage,\r\n    state: {\r\n      x: 775,\r\n      y: 775,\r\n      width: 450,\r\n      height: 450\r\n    },\r\n  })\r\n\r\n  const thrust = new Particle ({\r\n    image: fireImage,\r\n    state: {\r\n      x: 775,\r\n      y: 775,\r\n      width: 450,\r\n      height: 450\r\n    },\r\n  })\r\n\r\n  let gameState = 1;\r\n  let stateChange = true;\r\n  let levelState = 1;\r\n  let level = 1\r\n  let winChecked = false;\r\n  let end = false;\r\n  let score = 0\r\n  let lives = 2\r\n  let lockPlayer = false\r\n  let playerShots = []\r\n  let shotInterval = 600\r\n  let lastShot = 0\r\n  let shotsFired = 0\r\n  let numHits = 0\r\n  let badGuyShots = []\r\n  let badGuys = []\r\n  let livesSprites = []\r\n  let holdingOffset = {x: 0, y: 0}\r\n  let holdingOffsetDirection = 0\r\n\r\n  function setLiveSprites() {\r\n    livesSprites = []\r\n    for (let i = 0; i < lives; i++) {\r\n      livesSprites.push(new CollisionBodySquare({\r\n        pos: {x: 40 * i + 30, y: 980},\r\n        width: 30,\r\n        height: 30,\r\n        hide: false,\r\n        rotation: 1 * Math.PI,\r\n        collisionObjects: [\r\n          // {\r\n          //   collisionCenter: {x: 0, y: 0},\r\n          //   collisionDim: {x: 70, y: 70},\r\n          // }\r\n        ],\r\n        collisionShow: true,\r\n        image: Images.novaCyellow1,\r\n        ss: {\r\n          S: [\r\n            {\r\n              x: 0,\r\n              y: 0,\r\n              width: 106,\r\n              height: 111\r\n            },\r\n          ],\r\n        },\r\n        state: 'S',\r\n      }))\r\n    }\r\n  }\r\n  setLiveSprites()\r\n\r\n  function playerShoot() {\r\n    sounds.laser.play()\r\n    playerShots.push(Shot(Player.pos))\r\n    playerShots[playerShots.length - 1].time = 3000\r\n    shotsFired++\r\n  }\r\n\r\n  function badGuyShoot(pos) {\r\n    badGuyShots.push(Shot(pos))\r\n    badGuyShots[badGuyShots.length - 1].speed = -0.5\r\n    badGuyShots[badGuyShots.length - 1].time = 3000\r\n  }\r\n\r\n  let countdownWait = true\r\n\r\n  let countdown = new Timer({\r\n    time: 3000,\r\n    event: function () {\r\n      \r\n    }\r\n  })\r\n\r\n  let startLevelTimer = new Timer({\r\n    time: 3000,\r\n    event: function () {\r\n      \r\n    }\r\n  })\r\n\r\n  let playerTimer = new Timer({\r\n    time: 3000,\r\n    event: function () {\r\n      \r\n    }\r\n  })\r\n\r\n  const exitTimer = new Timer({\r\n    time: 3000,\r\n    event: function () {\r\n      console.log('timer done')\r\n      gameState = 1;\r\n      menu.reset()\r\n    }\r\n  })\r\n\r\n  let stageText = new Text({\r\n    text: 'Stage 1',\r\n    font: '50px spaceAge',\r\n    fillStyle: 'white',\r\n    pos: {x: 100, y: 500},\r\n    hide: true,\r\n  })\r\n\r\n  let scoreText = new Text({\r\n    text: 'Score: 0',\r\n    font: '30px spaceAge',\r\n    fillStyle: 'white',\r\n    pos: {x: 70, y: 30},\r\n    hide: false,\r\n  })\r\n\r\n  let endGameText1 = new Text({\r\n    text: 'Shots Fired: 100',\r\n    font: '30px spaceAge',\r\n    fillStyle: 'white',\r\n    pos: {x: 300, y: 600},\r\n    hide: true\r\n  })\r\n\r\n  let endGameText2 = new Text({\r\n    text: 'Number of Hits: 100',\r\n    font: '30px spaceAge',\r\n    fillStyle: 'white',\r\n    pos: {x: 300, y: 650},\r\n    hide: true\r\n  })\r\n\r\n  let endGameText3 = new Text({\r\n    text: 'Ratio hit/miss: 100',\r\n    font: '30px spaceAge',\r\n    fillStyle: 'white',\r\n    pos: {x: 300, y: 700},\r\n    hide: true\r\n  })\r\n\r\n  let allHome = false\r\n  let addL1P1 = false\r\n  let addL1P2 = false\r\n  let addL1P3 = false\r\n  let addL1P4 = false\r\n  let addL1P5 = false\r\n  let checkLevelOver = false\r\n  let numAdded = 0\r\n  let goalToAdd = 10\r\n  let addTime = 0\r\n  let addInt = 500\r\n  let row = 0\r\n  let col = 0\r\n  let xOff = 100\r\n  let yOff = 200\r\n\r\n  function addL1P1Ships(elapsedTime) {\r\n    addTime += elapsedTime\r\n    if (addTime > addInt) {\r\n      addTime -= addInt\r\n      badGuys.push(BadGuyTemp(Images.novaAblue1, 'S', {x: xOff + col * 90, y: yOff + 0 * 100}))\r\n      badGuys[badGuys.length - 1].events.explosion = function (x, y) {\r\n        explosion.explosion(x, y)\r\n        sounds.explosion.play()\r\n      }\r\n      badGuys[badGuys.length - 1].events.score = function (reportedScore) {\r\n        score += reportedScore\r\n      }\r\n      badGuys[badGuys.length - 1].events.shoot = function (pos) {\r\n        badGuyShoot(pos)\r\n      }\r\n      badGuys[badGuys.length - 1].path = [\r\n        {\r\n          p0: {\"x\": 300, \"y\": 550}, // end\r\n          p1: {\"x\": 600, \"y\": 400},\r\n          p2: {\"x\": 500, \"y\": 500},\r\n          p3: {\"x\": 600, \"y\": -50}, // start\r\n          speed: 0.01\r\n        },\r\n        {\r\n          p0: {\"x\": 512, \"y\": 512},\r\n          p1: {\"x\": 800, \"y\": 800},\r\n          p2: {\"x\": 50, \"y\": 750},\r\n          p3: {\"x\": 300, \"y\": 550},\r\n          speed: 0.01\r\n        },\r\n        {\r\n          p0: {\"x\": xOff + col * 90, \"y\": yOff + 0 * 100},\r\n          p1: {\"x\": 512, \"y\": 200},\r\n          p2: {\"x\": 200, \"y\": 250},\r\n          p3: {\"x\": 512, \"y\": 512},\r\n          speed: 0.01\r\n        },\r\n      ]\r\n      badGuys[badGuys.length - 1].t = 0\r\n      badGuys[badGuys.length - 1].score = 50\r\n      badGuys[badGuys.length - 1].pathIndex = 0\r\n      badGuys[badGuys.length - 1].holdingOffset = {x: 0, y: 0}\r\n      badGuys[badGuys.length - 1].originalPos = {x: xOff + col * 90, y: yOff + 0 * 100}\r\n      if (level === 3) {\r\n        badGuys[badGuys.length - 1].path[2] = {\r\n          p0: {\"x\": -200, \"y\": 300},\r\n          p1: {\"x\": 512, \"y\": 200},\r\n          p2: {\"x\": 200, \"y\": 250},\r\n          p3: {\"x\": 512, \"y\": 512},\r\n          speed: 0.01\r\n        }\r\n        badGuys[badGuys.length - 1].checkGone = true\r\n        \r\n      }\r\n\r\n\r\n      badGuys.push(BadGuyTemp(Images.novaAred1, 'S', {x: xOff + col * 90, y: yOff + 1 * 100}))\r\n      badGuys[badGuys.length - 1].events.explosion = function (x, y) {\r\n        explosion.explosion(x, y)\r\n        sounds.explosion.play()\r\n      }\r\n      badGuys[badGuys.length - 1].events.score = function (reportedScore) {\r\n        score += reportedScore\r\n      }\r\n      badGuys[badGuys.length - 1].events.shoot = function (pos) {\r\n        badGuyShoot(pos)\r\n      }\r\n      badGuys[badGuys.length - 1].path = [\r\n        {\r\n          p0: {\"x\": 724, \"y\": 550}, // end\r\n          p1: {\"x\": 424, \"y\": 400},\r\n          p2: {\"x\": 524, \"y\": 500},\r\n          p3: {\"x\": 424, \"y\": -50}, // start\r\n          speed: 0.01\r\n        },\r\n        {\r\n          p0: {\"x\": 512, \"y\": 512},\r\n          p1: {\"x\": 225, \"y\": 800},\r\n          p2: {\"x\": 974, \"y\": 750},\r\n          p3: {\"x\": 724, \"y\": 550},\r\n          speed: 0.01\r\n        },\r\n        {\r\n          p0: {\"x\": xOff + col * 90, \"y\": yOff + 1 * 100},\r\n          p1: {\"x\": 512, \"y\": 200},\r\n          p2: {\"x\": 824, \"y\": 250},\r\n          p3: {\"x\": 512, \"y\": 512},\r\n          speed: 0.01\r\n        },\r\n      ]\r\n      badGuys[badGuys.length - 1].t = 0\r\n      badGuys[badGuys.length - 1].score = 50\r\n      badGuys[badGuys.length - 1].pathIndex = 0\r\n      badGuys[badGuys.length - 1].holdingOffset = {x: 0, y: 0}\r\n      badGuys[badGuys.length - 1].originalPos = {x: xOff + col * 90, y: yOff + 1 * 100}\r\n      badGuys[badGuys.length - 1].events.shoot = function (pos) {\r\n        badGuyShoot(pos)\r\n      }\r\n\r\n      if (level === 3) {\r\n        badGuys[badGuys.length - 1].path[2] = {\r\n          p0: {\"x\": 1200, \"y\": 300},\r\n          p1: {\"x\": 512, \"y\": 200},\r\n          p2: {\"x\": 824, \"y\": 250},\r\n          p3: {\"x\": 512, \"y\": 512},\r\n          speed: 0.01\r\n        }\r\n        badGuys[badGuys.length - 1].checkGone = true\r\n        \r\n      }\r\n      \r\n      col++\r\n      if (col > 9) {\r\n        col = 0\r\n        row++\r\n      }\r\n      numAdded += 1\r\n      if (numAdded >= goalToAdd) {\r\n        addL1P1 = false\r\n        levelState = 2\r\n        countdown.event = function () {\r\n          if (level === 1) {\r\n            addL1P2 = true\r\n            numAdded = 0\r\n            goalToAdd = 5\r\n          } else if (level === 2) {\r\n            checkLevelOver = true\r\n          } else if (level === 3) {\r\n            goalToAdd = 5\r\n            numAdded = 0\r\n            levelState = 5\r\n            addL1P5 = true\r\n          }\r\n        }\r\n        countdown.start(5000)\r\n      }\r\n    }\r\n  }\r\n\r\n  function addL1P2Ships (elapsedTime) {\r\n    addTime += elapsedTime\r\n    if (addTime > addInt) {\r\n      addTime -= addInt\r\n      badGuys.push(BadGuyTemp(Images.novaBgreen4, 'T', {x: xOff + col * 90, y: 100 + 0 * 100}))\r\n      badGuys[badGuys.length - 1].events.explosion = function (x, y) {\r\n        explosion.explosion(x, y)\r\n        sounds.explosion.play()\r\n      }\r\n      badGuys[badGuys.length - 1].events.score = function (reportedScore) {\r\n        score += reportedScore\r\n      }\r\n      badGuys[badGuys.length - 1].path = [\r\n        {\r\n          p0: {\"x\": 300, \"y\": 500}, // end\r\n          p1: {\"x\": 0, \"y\": 1200},\r\n          p2: {\"x\": 800, \"y\": 500},\r\n          p3: {\"x\": -50, \"y\": 900}, // start\r\n          speed: 0.01\r\n        },\r\n        {\r\n          p0:  {x: xOff + col * 90, y: 100 + 0 * 100},\r\n          p1: {\"x\": 512, \"y\": 200},\r\n          p2: {\"x\": 824, \"y\": 250},\r\n          p3: {\"x\": 300, \"y\": 500},\r\n          speed: 0.01\r\n        }\r\n      ]\r\n      badGuys[badGuys.length - 1].t = 0\r\n      badGuys[badGuys.length - 1].score = 150\r\n      badGuys[badGuys.length - 1].pathIndex = 0\r\n      badGuys[badGuys.length - 1].holdingOffset = {x: 0, y: 0}\r\n      badGuys[badGuys.length - 1].originalPos = {x: xOff + col * 90, y: 100 + 0 * 100}\r\n      badGuys[badGuys.length - 1].lives = 1\r\n      badGuys[badGuys.length - 1].events.shoot = function (pos) {\r\n        badGuyShoot(pos)\r\n      }\r\n\r\n      if (level === 3) {\r\n        badGuys[badGuys.length - 1].checkGone = true\r\n        badGuys[badGuys.length - 1].path[1] = {\r\n          p0:  {x: 1024, y: -200},\r\n          p1: {\"x\": 512, \"y\": 200},\r\n          p2: {\"x\": 824, \"y\": 250},\r\n          p3: {\"x\": 300, \"y\": 500},\r\n          speed: 0.01\r\n        }\r\n\r\n      }\r\n\r\n      col++\r\n      if (col > 9) {\r\n        col = 0\r\n        row++\r\n      }\r\n      numAdded += 1\r\n      if (numAdded >= goalToAdd) {\r\n        addL1P2 = false\r\n        levelState = 3\r\n        countdown.event = function () {\r\n          if (level === 1) {\r\n            addL1P3 = true\r\n            numAdded = 0\r\n            goalToAdd = 5\r\n          } else if (level === 2){\r\n            addL1P5 = true\r\n            levelState = 5\r\n            goalToAdd = 5\r\n            numAdded = 0\r\n            col = 0\r\n          } else if (level === 3) {\r\n            checkLevelOver = true\r\n          }\r\n        }\r\n        countdown.start(5000)\r\n      }\r\n    }\r\n  }\r\n\r\n  function addL1P3Ships (elapsedTime) {\r\n    addTime += elapsedTime\r\n    if (addTime > addInt) {\r\n      addTime -= addInt\r\n      badGuys.push(BadGuyTemp(Images.novaBorange4, 'T', {x: xOff + col * 90, y: 100 + 0 * 100}))\r\n      badGuys[badGuys.length - 1].events.explosion = function (x, y) {\r\n        explosion.explosion(x, y)\r\n        sounds.explosion.play()\r\n      }\r\n      badGuys[badGuys.length - 1].events.score = function (reportedScore) {\r\n        score += reportedScore\r\n      }\r\n      badGuys[badGuys.length - 1].path = [\r\n        {\r\n          p0: {\"x\": 724, \"y\": 500}, // end\r\n          p1: {\"x\": 1024, \"y\": 1200},\r\n          p2: {\"x\": 224, \"y\": 500},\r\n          p3: {\"x\": 1074, \"y\": 900}, // start\r\n          speed: 0.01\r\n        },\r\n        {\r\n          p0:  {x: xOff + col * 90, y: 100 + 0 * 100},\r\n          p1: {\"x\": 512, \"y\": 200},\r\n          p2: {\"x\": 200, \"y\": 250},\r\n          p3: {\"x\": 724, \"y\": 500},\r\n          speed: 0.01\r\n        }\r\n      ]\r\n      badGuys[badGuys.length - 1].t = 0\r\n      badGuys[badGuys.length - 1].score = 150\r\n      badGuys[badGuys.length - 1].pathIndex = 0\r\n      badGuys[badGuys.length - 1].holdingOffset = {x: 0, y: 0}\r\n      badGuys[badGuys.length - 1].originalPos = {x: xOff + col * 90, y: 100 + 0 * 100}\r\n      badGuys[badGuys.length - 1].lives = 1\r\n      badGuys[badGuys.length - 1].events.shoot = function (pos) {\r\n        badGuyShoot(pos)\r\n      }\r\n\r\n      if (level === 3) {\r\n        badGuys[badGuys.length - 1].checkGone = true\r\n        badGuys[badGuys.length - 1].path[1] = {\r\n          p0:  {x: 0, y: -200},\r\n          p1: {\"x\": 512, \"y\": 200},\r\n          p2: {\"x\": 200, \"y\": 250},\r\n          p3: {\"x\": 724, \"y\": 500},\r\n          speed: 0.01\r\n        }\r\n      }\r\n\r\n      col++\r\n      if (col > 9) {\r\n        col = 0\r\n        row++\r\n      }\r\n      numAdded += 1\r\n      if (numAdded >= goalToAdd) {\r\n        addL1P3 = false\r\n        levelState = 4\r\n        countdown.event = function () {\r\n          if (level === 1) {\r\n            addL1P4 = true\r\n            numAdded = 0\r\n            goalToAdd = 5\r\n            col = 0\r\n          } else if (level === 2 || level === 3) {\r\n            addL1P2 = true\r\n            levelState = 2\r\n            goalToAdd = 5\r\n            numAdded = 0\r\n          }\r\n        }\r\n        countdown.start(4000)\r\n      }\r\n    }\r\n  }\r\n\r\n  function addL1P4Ships (elapsedTime) {\r\n    addTime += elapsedTime\r\n    if (addTime > addInt) {\r\n      addTime -= addInt\r\n      badGuys.push(BadGuyTemp(Images.novaCred3, 'R', {x: xOff + 5 + col * 90, y: 400 + 0 * 100}))\r\n      badGuys[badGuys.length - 1].width = 50\r\n      badGuys[badGuys.length - 1].collisionObjects[0].collisionDim.x = 50\r\n      badGuys[badGuys.length - 1].events.explosion = function (x, y) {\r\n        explosion.explosion(x, y)\r\n        sounds.explosion.play()\r\n      }\r\n      badGuys[badGuys.length - 1].events.score = function (reportedScore) {\r\n        score += reportedScore\r\n      }\r\n      badGuys[badGuys.length - 1].path = [\r\n        {\r\n          p0: {\"x\": 300, \"y\": 750}, // end\r\n          p1: {\"x\": 600, \"y\": 400},\r\n          p2: {\"x\": 512, \"y\": 500},\r\n          p3: {\"x\": 600, \"y\": -50}, // start\r\n          speed: 0.01\r\n        },\r\n        {\r\n          p0: {x: xOff + 5 + col * 90, y: 400 + 0 * 100},\r\n          p1: {\"x\": 512, \"y\": 200},\r\n          p2: {\"x\": -100, \"y\": 850},\r\n          p3: {\"x\": 300, \"y\": 750},\r\n          speed: 0.01\r\n        },\r\n      ]\r\n      badGuys[badGuys.length - 1].t = 0\r\n      badGuys[badGuys.length - 1].score = 80\r\n      badGuys[badGuys.length - 1].pathIndex = 0\r\n      badGuys[badGuys.length - 1].holdingOffset = {x: 0, y: 0}\r\n      badGuys[badGuys.length - 1].originalPos = {x: xOff + 5 + col * 90, y: 400 + 0 * 100}\r\n      badGuys[badGuys.length - 1].events.shoot = function (pos) {\r\n        badGuyShoot(pos)\r\n      }\r\n      \r\n      if (level === 3) {\r\n        badGuys[badGuys.length - 1].checkGone = true\r\n        badGuys[badGuys.length - 1].path[1] = {\r\n          p0: {x: 200, y: -200},\r\n          p1: {\"x\": 512, \"y\": 200},\r\n          p2: {\"x\": -100, \"y\": 850},\r\n          p3: {\"x\": 300, \"y\": 750},\r\n          speed: 0.01\r\n        }\r\n      }\r\n\r\n      col++\r\n      if (col > 9) {\r\n        col = 0\r\n        row++\r\n      }\r\n      numAdded += 1\r\n      if (numAdded >= goalToAdd) {\r\n        addL1P4 = false\r\n        levelState = 5\r\n        countdown.event = function () {\r\n          if (level === 1) {\r\n            addL1P5 = true\r\n            numAdded = 0\r\n            goalToAdd = 5\r\n          } else if (level === 2){\r\n            levelState = 1\r\n            addL1P1 = true\r\n            goalToAdd = 10\r\n            numAdded = 0\r\n          } else if (level === 3) {\r\n            levelState = 3\r\n            addL1P3 = true\r\n            goalToAdd = 5\r\n            numAdded = 0\r\n          }\r\n        }\r\n        countdown.start(5000)\r\n      }\r\n    }\r\n  }\r\n\r\n  function addL1P5Ships (elapsedTime) {\r\n    addTime += elapsedTime\r\n    if (addTime > addInt) {\r\n      addTime -= addInt\r\n      badGuys.push(BadGuyTemp(Images.novaCred3, 'R', {x: xOff + 5 + col * 90, y: 400 + 0 * 100}))\r\n      badGuys[badGuys.length - 1].width = 50\r\n      badGuys[badGuys.length - 1].collisionObjects[0].collisionDim.x = 50\r\n      badGuys[badGuys.length - 1].events.explosion = function (x, y) {\r\n        explosion.explosion(x, y)\r\n        sounds.explosion.play()\r\n      }\r\n      badGuys[badGuys.length - 1].events.score = function (reportedScore) {\r\n        score += reportedScore\r\n      }\r\n      badGuys[badGuys.length - 1].path = [\r\n        {\r\n          p0: {\"x\": 724, \"y\": 750}, // end\r\n          p1: {\"x\": 424, \"y\": 400},\r\n          p2: {\"x\": 512, \"y\": 500},\r\n          p3: {\"x\": 424, \"y\": -50}, // start\r\n          speed: 0.01\r\n        },\r\n        {\r\n          p0: {x: xOff + 5 + col * 90, y: 400 + 0 * 100},\r\n          p1: {\"x\": 512, \"y\": 200},\r\n          p2: {\"x\": 1124, \"y\": 850},\r\n          p3: {\"x\": 724, \"y\": 750},\r\n          speed: 0.01\r\n        },\r\n      ]\r\n      badGuys[badGuys.length - 1].t = 0\r\n      badGuys[badGuys.length - 1].score = 80\r\n      badGuys[badGuys.length - 1].pathIndex = 0\r\n      badGuys[badGuys.length - 1].holdingOffset = {x: 0, y: 0}\r\n      badGuys[badGuys.length - 1].originalPos = {x: xOff + 5 + col * 90, y: 400 + 0 * 100}\r\n      badGuys[badGuys.length - 1].events.shoot = function (pos) {\r\n        badGuyShoot(pos)\r\n      }\r\n\r\n      if (level === 3) {\r\n        badGuys[badGuys.length - 1].checkGone = true\r\n        badGuys[badGuys.length - 1].path[1] = {\r\n          p0: {\"x\": 800, \"y\": -200},\r\n          p1: {\"x\": 512, \"y\": 200},\r\n          p2: {\"x\": 1124, \"y\": 850},\r\n          p3: {\"x\": 724, \"y\": 750},\r\n          speed: 0.01\r\n        }\r\n      }\r\n\r\n      col++\r\n      if (col > 9) {\r\n        col = 0\r\n        row++\r\n      }\r\n      numAdded += 1\r\n      if (numAdded >= goalToAdd) {\r\n        addL1P5 = false\r\n        countdown.event = function () {\r\n          if (level === 1) {\r\n            levelState = 6\r\n            checkLevelOver = true\r\n          } else if (level === 2 || level === 3){\r\n            levelState = 4\r\n            addL1P4 = true\r\n            goalToAdd = 5\r\n            numAdded = 0\r\n          }\r\n        }\r\n        countdown.start(4000)\r\n      }\r\n    }\r\n  }\r\n\r\n  let paths = [\r\n    [\r\n      {\r\n        p3: {x: xOff + col * 90, y: 100 + 0 * 100},\r\n        p1: {\"x\": 512, \"y\": 200},\r\n        p2: {\"x\": 512, \"y\": 400},\r\n        p0: {\"x\": 500, \"y\": 500},\r\n        speed: 0.01\r\n      },\r\n      {\r\n        p0: {\"x\": -50, \"y\": 1100},\r\n        p1: {\"x\": 512, \"y\": 800},\r\n        p2: {\"x\": 500, \"y\": 500},\r\n        p3: {\"x\": 500, \"y\": 500},\r\n        speed: 0.01\r\n      },\r\n      {\r\n        p0: {x: xOff + col * 90, y: 100 + 0 * 100},\r\n        p1: {\"x\": 512, \"y\": 0},\r\n        p2: {\"x\": 512, \"y\": 0},\r\n        p3: {\"x\": 512, \"y\": -200},\r\n        speed: 0.01\r\n      },\r\n    ],\r\n    [\r\n      {\r\n        p3: {x: xOff + col * 90, y: 100 + 0 * 100},\r\n        p1: {\"x\": 512, \"y\": 200},\r\n        p2: {\"x\": 512, \"y\": 400},\r\n        p0: {\"x\": 500, \"y\": 500},\r\n        speed: 0.01\r\n      },\r\n      {\r\n        p0: {\"x\": 1100, \"y\": 1100},\r\n        p1: {\"x\": 512, \"y\": 800},\r\n        p2: {\"x\": 500, \"y\": 500},\r\n        p3: {\"x\": 500, \"y\": 500},\r\n        speed: 0.01\r\n      },\r\n      {\r\n        p0: {x: xOff + col * 90, y: 100 + 0 * 100},\r\n        p1: {\"x\": 512, \"y\": 0},\r\n        p2: {\"x\": 512, \"y\": 0},\r\n        p3: {\"x\": 512, \"y\": -200},\r\n        speed: 0.01\r\n      },\r\n    ]\r\n  ]\r\n\r\n  function divebomb (elapsedTime) {\r\n    if (badGuys.length > 0) {\r\n      addTime += elapsedTime\r\n      if (addTime > addInt * 12) {\r\n        addTime -= addInt * 12\r\n         let i = Random.randIntRange(0, badGuys.length - 1)\r\n        if (!badGuys[i].path) {\r\n          let pi = Random.randIntRange(0, paths.length - 1)\r\n          badGuys[i].path = [...paths[pi]]\r\n          badGuys[i].path[0].p3 = {...badGuys[i].pos}\r\n          badGuys[i].path[badGuys[i].path.length - 1].p0 = {...badGuys[i].originalPos}\r\n          badGuys[i].pathIndex = 0\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  function start () {\r\n    end = false\r\n    sounds.music3.currentTime = 0\r\n    sounds.music3.play() \r\n    lockPlayer = true\r\n    countdown.event = function () {\r\n      lockPlayer = false\r\n      startLevel1()\r\n    }\r\n    countdown.start(3000)\r\n    Player.hide = false\r\n    Player.dead = false\r\n    lives = 2\r\n    score = 0\r\n    badGuys.length = 0\r\n    endGameText1.hide = true\r\n    endGameText2.hide = true\r\n    endGameText3.hide = true\r\n    setLiveSprites()\r\n  }\r\n\r\n  function startLevel1 () {\r\n    checkLevelOver = false\r\n    stageText.text = 'Stage 1'\r\n    stageText.hide = false\r\n    startLevelTimer.event = function () {\r\n      stageText.hide = true\r\n      addL1P1 = true\r\n      levelState = 1\r\n      level = 1\r\n      numAdded = 0\r\n      goalToAdd = 10\r\n    }\r\n    startLevelTimer.start(3000)\r\n  }\r\n\r\n  function startLevel2 () {\r\n    checkLevelOver = false\r\n    stageText.text = 'Stage 2'\r\n    stageText.hide = false\r\n    startLevelTimer.event = function () {\r\n      stageText.hide = true\r\n      addTime = 0\r\n      addL1P3 = true\r\n      levelState = 3\r\n      level = 2\r\n      goalToAdd = 5\r\n      numAdded = 0\r\n    }\r\n    startLevelTimer.start(3000)\r\n  }\r\n\r\n  function startLevel3 () {\r\n    checkLevelOver = false\r\n    stageText.text = 'Challenge Stage'\r\n    stageText.hide = false\r\n    startLevelTimer.event = function () {\r\n      stageText.hide = true\r\n      level = 3\r\n      addL1P1 = true\r\n      goalToAdd = 10\r\n      numAdded = 0\r\n      levelState = 1\r\n    }\r\n    startLevelTimer.start(3000)\r\n  }\r\n\r\n  function updateHoldingOffset (elapsedTime) {\r\n    let speed = 0.02\r\n    if (holdingOffsetDirection < 2000) {\r\n      holdingOffset.x += speed * elapsedTime\r\n    } else {\r\n      holdingOffset.x += -speed * elapsedTime\r\n    }\r\n    holdingOffsetDirection += elapsedTime\r\n    if (holdingOffsetDirection > 4000) {\r\n      holdingOffsetDirection = 0\r\n    }\r\n  }\r\n\r\n  function reduce(numerator,denominator){\r\n    var gcd = function gcd(a,b){\r\n      return b ? gcd(b, a%b) : a;\r\n    };\r\n    gcd = gcd(numerator,denominator);\r\n    return [numerator/gcd, denominator/gcd];\r\n  }\r\n\r\n  const menu = Menu()\r\n\r\n  Player.events.playerDie = function (x, y) {\r\n    console.log('dead')\r\n    explosion.explosion(x, y)\r\n    sounds.explosion.play()\r\n    Player.dead = true\r\n    Player.hide = true\r\n    lives -= 1\r\n    if (lives > -1) {\r\n      playerTimer.event = function () {\r\n        Player.pos.x = 512\r\n        Player.hide = false\r\n        explosion.edges(Player.pos.x - Player.width / 2, Player.pos.x + Player.width / 2, Player.pos.y + Player.height / 2)\r\n        Player.dead = false\r\n        setLiveSprites()\r\n      }\r\n      playerTimer.start(2000)\r\n    } else {\r\n      endGameText1.text = `Shots Fired: ${shotsFired}`\r\n      endGameText1.hide = false\r\n      endGameText2.text = `Number Hits: ${numHits}`\r\n      endGameText2.hide = false\r\n      let ratio = reduce(numHits, shotsFired)\r\n      endGameText3.text = `Ratio Hit/Miss: ${ratio[0]}/${ratio[1]}`\r\n      endGameText3.hide = false\r\n\r\n      let added = false\r\n      for (let i = 0; i < globals.highScores.length; i++) {\r\n        if (score > globals.highScores[i]) {\r\n          added = true\r\n          globals.highScores.splice(i, 0, score)\r\n          break;\r\n        } \r\n      }\r\n      if (!added) globals.highScores.push(score)\r\n      storeGlobals()\r\n\r\n      playerTimer.event = function () {\r\n        gameState = 1\r\n        sounds.music3.stop()\r\n        menu.reset()\r\n      }\r\n      playerTimer.start(2000)\r\n    }\r\n  }\r\n    \r\n  let wait = 0\r\n  \r\n  function update(elapsedTime) {\r\n    // for consoling\r\n    wait += elapsedTime\r\n    if (wait > 6000) {\r\n      wait = 0\r\n      // console.log(background)\r\n      // console.log(badGuys)\r\n    }\r\n\r\n    if (stateChange) {\r\n      stateChange = false\r\n    }\r\n\r\n    cam1.update(elapsedTime, input)\r\n    \r\n    switch (gameState) {\r\n      case 1:\r\n        menu.update(input)\r\n        if (menu.play()) {\r\n          gameState = 2\r\n          globals.score = 0\r\n          start()\r\n        }\r\n        break;\r\n      case 2:\r\n        countdown.update(elapsedTime)\r\n        startLevelTimer.update(elapsedTime)\r\n        playerTimer.update(elapsedTime)\r\n        explosion.update(elapsedTime)\r\n        scoreText.text = `Score: ${score}`\r\n        if (input.keys.hasOwnProperty(globals.fire)) {\r\n          if (lastShot > shotInterval) {\r\n            playerShoot()\r\n            lastShot = 0\r\n          }\r\n        }\r\n        lastShot += elapsedTime\r\n\r\n        switch (levelState) {\r\n          case 1:\r\n            if (addL1P1) {\r\n              addL1P1Ships(elapsedTime)\r\n            }\r\n            break;\r\n          case 2:\r\n            if (addL1P2) {\r\n              addL1P2Ships(elapsedTime)\r\n            }\r\n            break;\r\n          case 3:\r\n            if (addL1P3) {\r\n              addL1P3Ships(elapsedTime)\r\n            }\r\n            break;\r\n          case 4:\r\n            if (addL1P4) {\r\n              addL1P4Ships(elapsedTime)\r\n            }\r\n            break;\r\n          case 5:\r\n            if (addL1P5) {\r\n              addL1P5Ships(elapsedTime)\r\n            }\r\n            break;\r\n          case 6:\r\n            divebomb(elapsedTime)\r\n            break;\r\n        }\r\n\r\n        let newShots = [];\r\n        for (let i = 0; i < playerShots.length; i++) {\r\n          playerShots[i].collisionChecks = badGuys\r\n          playerShots[i].update(elapsedTime, input);\r\n          if (playerShots[i].time > 0 && !playerShots[i].deadAndDone) {\r\n            newShots.push(playerShots[i]);\r\n          }\r\n          if (playerShots[i].dead) {\r\n            numHits++\r\n            playerShots[i].deadAndDone = true\r\n          }\r\n        }\r\n        playerShots = newShots;\r\n\r\n        updateHoldingOffset(elapsedTime)\r\n\r\n        let newBadGuys = []\r\n        allHome = true\r\n        for (let i = 0; i < badGuys.length; i++) {\r\n          if (Player.hide) {\r\n            badGuys[i].collisionChecks = [...playerShots]\r\n          } else {\r\n            badGuys[i].collisionChecks = [...playerShots, player]\r\n          }\r\n          badGuys[i].update(elapsedTime, input)\r\n          badGuys[i].holdingOffset = holdingOffset\r\n          if (allHome && !badGuys[i].home) {\r\n            allHome = false\r\n          }\r\n          if (!badGuys[i].dead) {\r\n            newBadGuys.push(badGuys[i])\r\n          }\r\n        }\r\n        badGuys = newBadGuys\r\n        if (badGuys.length === 0) {\r\n          allHome = false\r\n        }\r\n        if (checkLevelOver && badGuys.length === 0) {\r\n          if (level === 1) {\r\n            startLevel2()\r\n          } else if (level === 2) {\r\n            startLevel3()\r\n          } else if (level === 3) {\r\n            startLevel1()\r\n          }\r\n        }\r\n\r\n        \r\n        let newBadGuyShots = []\r\n        for (let i = 0; i < badGuyShots.length; i++) {\r\n          if (Player.hide) {\r\n            badGuyShots[i].collisionChecks = []\r\n          } else {\r\n            badGuyShots[i].collisionChecks = [Player]\r\n          }\r\n          badGuyShots[i].update(elapsedTime, input)\r\n          if (badGuyShots[i].time > 0 && !badGuyShots[i].deadAndDone) {\r\n            newBadGuyShots.push(badGuyShots[i])\r\n          }\r\n          if (badGuyShots[i].dead) {\r\n            badGuyShots[i].deadAndDone = true\r\n          }\r\n        }\r\n        badGuyShots = newBadGuyShots\r\n        \r\n        if (!lockPlayer) {\r\n          Player.collisionChecks = [...badGuyShots, ...badGuys]\r\n          Player.update(elapsedTime, input);\r\n        }\r\n \r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    \r\n    input.clear()\r\n  }\r\n\r\n\r\n  function gameLoop(time) {\r\n    let elapsedTime = time - previousTime;\r\n    previousTime = time;\r\n    update(elapsedTime);\r\n\r\n    switch (gameState) {\r\n      case 1:\r\n        render.frame([menu.renders])\r\n        break;\r\n      case 2:\r\n        render.frame([\r\n          [thrust, Player, explosion],\r\n          livesSprites,\r\n          playerShots,\r\n          badGuys,\r\n          badGuyShots,\r\n          [stageText, scoreText, endGameText1, endGameText2, endGameText3]\r\n        ]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    \r\n    requestAnimationFrame(gameLoop);\r\n  }\r\n\r\n  requestAnimationFrame(gameLoop)\r\n}","<template>\n  <div id=\"app\">\n    <canvas id=\"canvas-id\" width=\"1024\" height=\"1024\" />\n  </div>\n</template>\n\n<script>\nimport game from './game/game'\n\nexport default {\n  name: 'app',\n  data: () => ({\n    mazeAscii: ''\n  }),\n  mounted () {\n    game()\n  }\n}\n</script>\n\n<style>\n@font-face {\n  font-family: spaceAge;\n  src: url(./assets/space_age/spaceage.ttf);\n}\n\nhtml, body {\n  width: 100%;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n}\n\n#app {\n  font-family: spaceAge;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0;\n  padding: 0;\n  display: block;\n  /* width: 100%;\n  height: 100%; */\n}\n\n#canvas-id {\n  width: 48%;\n  height: 48%;\n  border-style: solid;\n  border-width: 2px;\n  margin: 5px;\n  padding: 0;\n  /* display: block; */\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=4567b204&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","module.exports = __webpack_public_path__ + \"media/laser-shot.e794d504.wav\";","module.exports = __webpack_public_path__ + \"media/storm.bdd3497a.mp3\";","module.exports = __webpack_public_path__ + \"img/nova-b-green-4.08026c34.png\";","module.exports = __webpack_public_path__ + \"img/nova-a-blue-1.d61c9703.png\";","module.exports = __webpack_public_path__ + \"img/nova-a-purple-4.e5c93b80.png\";","module.exports = __webpack_public_path__ + \"img/explosion.ad358d80.png\";","module.exports = __webpack_public_path__ + \"media/level-up.924db1c8.mp3\";","module.exports = __webpack_public_path__ + \"img/nova-b-orange-4.e6817b74.png\";","module.exports = __webpack_public_path__ + \"img/nova-a-red-1.c71cbace.png\";","module.exports = __webpack_public_path__ + \"img/nova-c-purple-4.17b6ce47.png\";","module.exports = __webpack_public_path__ + \"img/nova-c-red-3.044efe07.png\";"],"sourceRoot":""}